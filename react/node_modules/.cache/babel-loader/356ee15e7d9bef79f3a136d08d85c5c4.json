{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\r\n * A pushable sub-component for Sidebar.\r\n */\n\nfunction SidebarPushable(props) {\n  var className = props.className,\n      children = props.children,\n      content = props.content;\n  var classes = cx('pushable', className);\n  var rest = getUnhandledProps(SidebarPushable, props);\n  var ElementType = getElementType(SidebarPushable, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSidebarPushable.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nSidebarPushable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default SidebarPushable;","map":{"version":3,"sources":["C:/Users/xuebi/Desktop/EasyJobs/react/node_modules/semantic-ui-react/dist/es/modules/Sidebar/SidebarPushable.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","SidebarPushable","props","className","children","content","classes","rest","ElementType","createElement","isNil","handledProps","propTypes","process","env","NODE_ENV","as","elementType","node","string","contentShorthand"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,cAAzC,EAAyDC,iBAAzD,QAAkF,WAAlF;AACA;AACA;AACA;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,MAAIC,SAAS,GAAGD,KAAK,CAACC,SAAtB;AAAA,MACIC,QAAQ,GAAGF,KAAK,CAACE,QADrB;AAAA,MAEIC,OAAO,GAAGH,KAAK,CAACG,OAFpB;AAGA,MAAIC,OAAO,GAAGZ,EAAE,CAAC,UAAD,EAAaS,SAAb,CAAhB;AACA,MAAII,IAAI,GAAGP,iBAAiB,CAACC,eAAD,EAAkBC,KAAlB,CAA5B;AACA,MAAIM,WAAW,GAAGT,cAAc,CAACE,eAAD,EAAkBC,KAAlB,CAAhC;AACA,SAAO,aAAaN,KAAK,CAACa,aAAN,CAAoBD,WAApB,EAAiCf,QAAQ,CAAC,EAAD,EAAKc,IAAL,EAAW;AACtEJ,IAAAA,SAAS,EAAEG;AAD2D,GAAX,CAAzC,EAEhBT,aAAa,CAACa,KAAd,CAAoBN,QAApB,IAAgCC,OAAhC,GAA0CD,QAF1B,CAApB;AAGD;;AAEDH,eAAe,CAACU,YAAhB,GAA+B,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,SAAhC,CAA/B;AACAV,eAAe,CAACW,SAAhB,GAA4BC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAClE;AACAC,EAAAA,EAAE,EAAErB,SAAS,CAACsB,WAFoD;;AAIlE;AACAb,EAAAA,QAAQ,EAAET,SAAS,CAACuB,IAL8C;;AAOlE;AACAf,EAAAA,SAAS,EAAER,SAAS,CAACwB,MAR6C;;AAUlE;AACAd,EAAAA,OAAO,EAAEP,eAAe,CAACsB;AAXyC,CAAxC,GAYxB,EAZJ;AAaA,eAAenB,eAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport cx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\r\n/**\r\n * A pushable sub-component for Sidebar.\r\n */\r\n\r\nfunction SidebarPushable(props) {\r\n  var className = props.className,\r\n      children = props.children,\r\n      content = props.content;\r\n  var classes = cx('pushable', className);\r\n  var rest = getUnhandledProps(SidebarPushable, props);\r\n  var ElementType = getElementType(SidebarPushable, props);\r\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\r\n    className: classes\r\n  }), childrenUtils.isNil(children) ? content : children);\r\n}\r\n\r\nSidebarPushable.handledProps = [\"as\", \"children\", \"className\", \"content\"];\r\nSidebarPushable.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: PropTypes.elementType,\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** Shorthand for primary content. */\r\n  content: customPropTypes.contentShorthand\r\n} : {};\r\nexport default SidebarPushable;"]},"metadata":{},"sourceType":"module"}