{"ast":null,"code":"import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n/** Used as the size to enable large array optimizations. */\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\r\n * The base implementation of methods like `_.difference` without support\r\n * for excluding multiple arrays or iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {Array} values The values to exclude.\r\n * @param {Function} [iteratee] The iteratee invoked per element.\r\n * @param {Function} [comparator] The comparator invoked per element.\r\n * @returns {Array} Returns the new array of filtered values.\r\n */\n\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  } else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n\n  outer: while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n    value = comparator || value !== 0 ? value : 0;\n\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n\n      result.push(value);\n    } else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n\n  return result;\n}\n\nexport default baseDifference;","map":{"version":3,"sources":["C:/Users/xuebi/Desktop/EasyJobs/react/node_modules/lodash-es/_baseDifference.js"],"names":["SetCache","arrayIncludes","arrayIncludesWith","arrayMap","baseUnary","cacheHas","LARGE_ARRAY_SIZE","baseDifference","array","values","iteratee","comparator","index","includes","isCommon","length","result","valuesLength","outer","value","computed","valuesIndex","push"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gBAArB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,iBAAP,MAA8B,yBAA9B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA;;AACA,IAAIC,gBAAgB,GAAG,GAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,QAAvC,EAAiDC,UAAjD,EAA6D;AAC3D,MAAIC,KAAK,GAAG,CAAC,CAAb;AAAA,MACIC,QAAQ,GAAGZ,aADf;AAAA,MAEIa,QAAQ,GAAG,IAFf;AAAA,MAGIC,MAAM,GAAGP,KAAK,CAACO,MAHnB;AAAA,MAIIC,MAAM,GAAG,EAJb;AAAA,MAKIC,YAAY,GAAGR,MAAM,CAACM,MAL1B;;AAOA,MAAI,CAACA,MAAL,EAAa;AACX,WAAOC,MAAP;AACD;;AACD,MAAIN,QAAJ,EAAc;AACZD,IAAAA,MAAM,GAAGN,QAAQ,CAACM,MAAD,EAASL,SAAS,CAACM,QAAD,CAAlB,CAAjB;AACD;;AACD,MAAIC,UAAJ,EAAgB;AACdE,IAAAA,QAAQ,GAAGX,iBAAX;AACAY,IAAAA,QAAQ,GAAG,KAAX;AACD,GAHD,MAIK,IAAIL,MAAM,CAACM,MAAP,IAAiBT,gBAArB,EAAuC;AAC1CO,IAAAA,QAAQ,GAAGR,QAAX;AACAS,IAAAA,QAAQ,GAAG,KAAX;AACAL,IAAAA,MAAM,GAAG,IAAIT,QAAJ,CAAaS,MAAb,CAAT;AACD;;AACDS,EAAAA,KAAK,EACL,OAAO,EAAEN,KAAF,GAAUG,MAAjB,EAAyB;AACvB,QAAII,KAAK,GAAGX,KAAK,CAACI,KAAD,CAAjB;AAAA,QACIQ,QAAQ,GAAGV,QAAQ,IAAI,IAAZ,GAAmBS,KAAnB,GAA2BT,QAAQ,CAACS,KAAD,CADlD;AAGAA,IAAAA,KAAK,GAAIR,UAAU,IAAIQ,KAAK,KAAK,CAAzB,GAA8BA,KAA9B,GAAsC,CAA9C;;AACA,QAAIL,QAAQ,IAAIM,QAAQ,KAAKA,QAA7B,EAAuC;AACrC,UAAIC,WAAW,GAAGJ,YAAlB;;AACA,aAAOI,WAAW,EAAlB,EAAsB;AACpB,YAAIZ,MAAM,CAACY,WAAD,CAAN,KAAwBD,QAA5B,EAAsC;AACpC,mBAASF,KAAT;AACD;AACF;;AACDF,MAAAA,MAAM,CAACM,IAAP,CAAYH,KAAZ;AACD,KARD,MASK,IAAI,CAACN,QAAQ,CAACJ,MAAD,EAASW,QAAT,EAAmBT,UAAnB,CAAb,EAA6C;AAChDK,MAAAA,MAAM,CAACM,IAAP,CAAYH,KAAZ;AACD;AACF;;AACD,SAAOH,MAAP;AACD;;AAED,eAAeT,cAAf","sourcesContent":["import SetCache from './_SetCache.js';\r\nimport arrayIncludes from './_arrayIncludes.js';\r\nimport arrayIncludesWith from './_arrayIncludesWith.js';\r\nimport arrayMap from './_arrayMap.js';\r\nimport baseUnary from './_baseUnary.js';\r\nimport cacheHas from './_cacheHas.js';\r\n\r\n/** Used as the size to enable large array optimizations. */\r\nvar LARGE_ARRAY_SIZE = 200;\r\n\r\n/**\r\n * The base implementation of methods like `_.difference` without support\r\n * for excluding multiple arrays or iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {Array} values The values to exclude.\r\n * @param {Function} [iteratee] The iteratee invoked per element.\r\n * @param {Function} [comparator] The comparator invoked per element.\r\n * @returns {Array} Returns the new array of filtered values.\r\n */\r\nfunction baseDifference(array, values, iteratee, comparator) {\r\n  var index = -1,\r\n      includes = arrayIncludes,\r\n      isCommon = true,\r\n      length = array.length,\r\n      result = [],\r\n      valuesLength = values.length;\r\n\r\n  if (!length) {\r\n    return result;\r\n  }\r\n  if (iteratee) {\r\n    values = arrayMap(values, baseUnary(iteratee));\r\n  }\r\n  if (comparator) {\r\n    includes = arrayIncludesWith;\r\n    isCommon = false;\r\n  }\r\n  else if (values.length >= LARGE_ARRAY_SIZE) {\r\n    includes = cacheHas;\r\n    isCommon = false;\r\n    values = new SetCache(values);\r\n  }\r\n  outer:\r\n  while (++index < length) {\r\n    var value = array[index],\r\n        computed = iteratee == null ? value : iteratee(value);\r\n\r\n    value = (comparator || value !== 0) ? value : 0;\r\n    if (isCommon && computed === computed) {\r\n      var valuesIndex = valuesLength;\r\n      while (valuesIndex--) {\r\n        if (values[valuesIndex] === computed) {\r\n          continue outer;\r\n        }\r\n      }\r\n      result.push(value);\r\n    }\r\n    else if (!includes(values, computed, comparator)) {\r\n      result.push(value);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default baseDifference;\r\n"]},"metadata":{},"sourceType":"module"}