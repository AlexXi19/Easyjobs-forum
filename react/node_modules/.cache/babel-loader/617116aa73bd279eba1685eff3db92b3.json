{"ast":null,"code":"var _jsxFileName = \"/Users/Kevin/Desktop/Platform/react/src/components/CommentList.js\";\nimport React from \"react\";\nimport Commented from \"./Comment\";\nimport { Button, Comment, Form, Header } from 'semantic-ui-react';\nvar replyClicked = fasle;\nexport default function CommentList(props) {\n  function handleClick() {\n    replyClicked = true;\n  }\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"commentList\">\n\n    /* <h5 className=\"text-muted mb-4\">\n        <span className=\"badge badge-success\">{props.comments.length}</span>{\" \"}Comment{props.comments.length>0?\"s\":\"\"}\n    </h5>\n    {props.comments.length===0&& !props.loading?(<div className=\"alert text-center alert-info\">\n    Be the first to comment\n    </div>\n    ) : null} */\n    React.createElement(Comment.Group, {\n      className: \".comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 6\n      }\n    }, props.comments.map((comment, index) => /*#__PURE__*/React.createElement(Commented, {\n      key: index,\n      comment: comment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    })), replyClicked ? /*#__PURE__*/React.createElement(Form, {\n      reply: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.TextArea, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      content: \"Add Reply\",\n      labelPosition: \"left\",\n      icon: \"edit\",\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 6\n      }\n    })) : null)\n    /* </div> */\n\n  );\n}","map":{"version":3,"sources":["/Users/Kevin/Desktop/Platform/react/src/components/CommentList.js"],"names":["React","Commented","Button","Comment","Form","Header","replyClicked","fasle","CommentList","props","handleClick","comments","map","comment","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,IAA1B,EAAgCC,MAAhC,QAA8C,mBAA9C;AACA,IAAIC,YAAY,GAACC,KAAjB;AACA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AACxC,WAASC,WAAT,GAAsB;AACpBJ,IAAAA,YAAY,GAAC,IAAb;AACA;;AACA;AAAA;AACI;;AACI;AACZ;AACA;AACA;AACA;AACA;AACA;AAEK,wBAAC,OAAD,CAAS,KAAT;AAAe,MAAA,SAAS,EAAC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIEG,KAAK,CAACE,QAAN,CAAeC,GAAf,CAAmB,CAACC,OAAD,EAAUC,KAAV,kBAClB,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,KAAhB;AAAuB,MAAA,OAAO,EAAED,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJF,EAQEP,YAAY,gBAAG,oBAAC,IAAD;AAAM,MAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACjB,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiB,eAEjB,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,aAAa,EAAC,MAA1C;AAAiD,MAAA,IAAI,EAAC,MAAtD;AAA6D,MAAA,OAAO,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFiB,CAAH,GAGP,IAXP;AAaG;;AAvBJ;AAyBH","sourcesContent":["import React from \"react\";\nimport Commented from \"./Comment\";\nimport { Button, Comment, Form, Header } from 'semantic-ui-react'\nvar replyClicked=fasle;\nexport default function CommentList(props){\n  function handleClick(){\n    replyClicked=true;\n   }\n    return(\n        // <div className=\"commentList\">\n            /* <h5 className=\"text-muted mb-4\">\n                <span className=\"badge badge-success\">{props.comments.length}</span>{\" \"}Comment{props.comments.length>0?\"s\":\"\"}\n            </h5>\n            {props.comments.length===0&& !props.loading?(<div className=\"alert text-center alert-info\">\n          Be the first to comment\n        </div>\n      ) : null} */\n\n     <Comment.Group className=\".comment\" >\n   {/* <Header as='h3' dividing>\n     Comments\n   </Header> */}\n      {props.comments.map((comment, index) => (\n        <Commented key={index} comment={comment} />\n      ))}\n\n     { replyClicked? (<Form reply>\n     <Form.TextArea />\n     <Button content='Add Reply' labelPosition='left' icon='edit' primary />\n   </Form>):null}\n   </Comment.Group> \n        /* </div> */\n    );\n}"]},"metadata":{},"sourceType":"module"}