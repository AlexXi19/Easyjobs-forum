{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\r\n * A table can have a header.\r\n */\n\nfunction TableHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fullWidth = props.fullWidth;\n  var classes = cx(useKeyOnly(fullWidth, 'full-width'), className);\n  var rest = getUnhandledProps(TableHeader, props);\n  var ElementType = getElementType(TableHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nTableHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fullWidth\"];\nTableHeader.defaultProps = {\n  as: 'thead'\n};\nTableHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A definition table can have a full width header or footer, filling in the gap left by the first column. */\n  fullWidth: PropTypes.bool\n} : {};\nexport default TableHeader;","map":{"version":3,"sources":["C:/Users/xuebi/Desktop/EasyJobs/react/node_modules/semantic-ui-react/dist/es/collections/Table/TableHeader.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","useKeyOnly","TableHeader","props","children","className","content","fullWidth","classes","rest","ElementType","createElement","isNil","handledProps","defaultProps","as","propTypes","process","env","NODE_ENV","elementType","node","string","contentShorthand","bool"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,cAAzC,EAAyDC,iBAAzD,EAA4EC,UAA5E,QAA8F,WAA9F;AACA;AACA;AACA;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;AAAA,MAEIC,OAAO,GAAGH,KAAK,CAACG,OAFpB;AAAA,MAGIC,SAAS,GAAGJ,KAAK,CAACI,SAHtB;AAIA,MAAIC,OAAO,GAAGd,EAAE,CAACO,UAAU,CAACM,SAAD,EAAY,YAAZ,CAAX,EAAsCF,SAAtC,CAAhB;AACA,MAAII,IAAI,GAAGT,iBAAiB,CAACE,WAAD,EAAcC,KAAd,CAA5B;AACA,MAAIO,WAAW,GAAGX,cAAc,CAACG,WAAD,EAAcC,KAAd,CAAhC;AACA,SAAO,aAAaP,KAAK,CAACe,aAAN,CAAoBD,WAApB,EAAiCjB,QAAQ,CAAC,EAAD,EAAKgB,IAAL,EAAW;AACtEJ,IAAAA,SAAS,EAAEG;AAD2D,GAAX,CAAzC,EAEhBX,aAAa,CAACe,KAAd,CAAoBR,QAApB,IAAgCE,OAAhC,GAA0CF,QAF1B,CAApB;AAGD;;AAEDF,WAAW,CAACW,YAAZ,GAA2B,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,SAAhC,EAA2C,WAA3C,CAA3B;AACAX,WAAW,CAACY,YAAZ,GAA2B;AACzBC,EAAAA,EAAE,EAAE;AADqB,CAA3B;AAGAb,WAAW,CAACc,SAAZ,GAAwBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC9D;AACAJ,EAAAA,EAAE,EAAEpB,SAAS,CAACyB,WAFgD;;AAI9D;AACAhB,EAAAA,QAAQ,EAAET,SAAS,CAAC0B,IAL0C;;AAO9D;AACAhB,EAAAA,SAAS,EAAEV,SAAS,CAAC2B,MARyC;;AAU9D;AACAhB,EAAAA,OAAO,EAAER,eAAe,CAACyB,gBAXqC;;AAa9D;AACAhB,EAAAA,SAAS,EAAEZ,SAAS,CAAC6B;AAdyC,CAAxC,GAepB,EAfJ;AAgBA,eAAetB,WAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport cx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\r\n/**\r\n * A table can have a header.\r\n */\r\n\r\nfunction TableHeader(props) {\r\n  var children = props.children,\r\n      className = props.className,\r\n      content = props.content,\r\n      fullWidth = props.fullWidth;\r\n  var classes = cx(useKeyOnly(fullWidth, 'full-width'), className);\r\n  var rest = getUnhandledProps(TableHeader, props);\r\n  var ElementType = getElementType(TableHeader, props);\r\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\r\n    className: classes\r\n  }), childrenUtils.isNil(children) ? content : children);\r\n}\r\n\r\nTableHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fullWidth\"];\r\nTableHeader.defaultProps = {\r\n  as: 'thead'\r\n};\r\nTableHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: PropTypes.elementType,\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** Shorthand for primary content. */\r\n  content: customPropTypes.contentShorthand,\r\n\r\n  /** A definition table can have a full width header or footer, filling in the gap left by the first column. */\r\n  fullWidth: PropTypes.bool\r\n} : {};\r\nexport default TableHeader;"]},"metadata":{},"sourceType":"module"}