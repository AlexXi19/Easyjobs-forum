{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport createChainedFunction from './createChainedFunction';\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\r\n * There are situations due to browser quirks or Bootstrap CSS where\r\n * an anchor tag is needed, when semantically a button tag is the\r\n * better choice. SafeAnchor ensures that when an anchor is used like a\r\n * button its accessible. It also emulates input `disabled` behavior for\r\n * links, which is usually desirable for Buttons, NavItems, DropdownItems, etc.\r\n */\n\n\nvar SafeAnchor = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'a' : _ref$as,\n      disabled = _ref.disabled,\n      onKeyDown = _ref.onKeyDown,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"disabled\", \"onKeyDown\"]);\n\n  var handleClick = function handleClick(event) {\n    var href = props.href,\n        onClick = props.onClick;\n\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (isTrivialHref(props.href)) {\n    props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n    // otherwise, the cursor incorrectly styled (except with role='button')\n\n    props.href = props.href || '#';\n  }\n\n  if (disabled) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    onClick: handleClick,\n    onKeyDown: createChainedFunction(handleKeyDown, onKeyDown)\n  }));\n});\nSafeAnchor.displayName = 'SafeAnchor';\nexport default SafeAnchor;","map":{"version":3,"sources":["C:/Users/xuebi/Desktop/EasyJobs/react/node_modules/react-bootstrap/esm/SafeAnchor.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","createChainedFunction","isTrivialHref","href","trim","SafeAnchor","forwardRef","_ref","ref","_ref$as","as","Component","disabled","onKeyDown","props","handleClick","event","onClick","preventDefault","stopPropagation","handleKeyDown","key","role","tabIndex","createElement","displayName"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,SAAO,CAACA,IAAD,IAASA,IAAI,CAACC,IAAL,OAAgB,GAAhC;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIC,UAAU,GAAG,aAAaL,KAAK,CAACM,UAAN,CAAiB,UAAUC,IAAV,EAAgBC,GAAhB,EAAqB;AAClE,MAAIC,OAAO,GAAGF,IAAI,CAACG,EAAnB;AAAA,MACIC,SAAS,GAAGF,OAAO,KAAK,KAAK,CAAjB,GAAqB,GAArB,GAA2BA,OAD3C;AAAA,MAEIG,QAAQ,GAAGL,IAAI,CAACK,QAFpB;AAAA,MAGIC,SAAS,GAAGN,IAAI,CAACM,SAHrB;AAAA,MAIIC,KAAK,GAAGf,6BAA6B,CAACQ,IAAD,EAAO,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,CAAP,CAJzC;;AAMA,MAAIQ,WAAW,GAAG,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC5C,QAAIb,IAAI,GAAGW,KAAK,CAACX,IAAjB;AAAA,QACIc,OAAO,GAAGH,KAAK,CAACG,OADpB;;AAGA,QAAIL,QAAQ,IAAIV,aAAa,CAACC,IAAD,CAA7B,EAAqC;AACnCa,MAAAA,KAAK,CAACE,cAAN;AACD;;AAED,QAAIN,QAAJ,EAAc;AACZI,MAAAA,KAAK,CAACG,eAAN;AACA;AACD;;AAED,QAAIF,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACD,KAAD,CAAP;AACD;AACF,GAhBD;;AAkBA,MAAII,aAAa,GAAG,SAASA,aAAT,CAAuBJ,KAAvB,EAA8B;AAChD,QAAIA,KAAK,CAACK,GAAN,KAAc,GAAlB,EAAuB;AACrBL,MAAAA,KAAK,CAACE,cAAN;AACAH,MAAAA,WAAW,CAACC,KAAD,CAAX;AACD;AACF,GALD;;AAOA,MAAId,aAAa,CAACY,KAAK,CAACX,IAAP,CAAjB,EAA+B;AAC7BW,IAAAA,KAAK,CAACQ,IAAN,GAAaR,KAAK,CAACQ,IAAN,IAAc,QAA3B,CAD6B,CACQ;AACrC;;AAEAR,IAAAA,KAAK,CAACX,IAAN,GAAaW,KAAK,CAACX,IAAN,IAAc,GAA3B;AACD;;AAED,MAAIS,QAAJ,EAAc;AACZE,IAAAA,KAAK,CAACS,QAAN,GAAiB,CAAC,CAAlB;AACAT,IAAAA,KAAK,CAAC,eAAD,CAAL,GAAyB,IAAzB;AACD;;AAED,SAAO,aAAad,KAAK,CAACwB,aAAN,CAAoBb,SAApB,EAA+Bb,QAAQ,CAAC;AAC1DU,IAAAA,GAAG,EAAEA;AADqD,GAAD,EAExDM,KAFwD,EAEjD;AACRG,IAAAA,OAAO,EAAEF,WADD;AAERF,IAAAA,SAAS,EAAEZ,qBAAqB,CAACmB,aAAD,EAAgBP,SAAhB;AAFxB,GAFiD,CAAvC,CAApB;AAMD,CAlD6B,CAA9B;AAmDAR,UAAU,CAACoB,WAAX,GAAyB,YAAzB;AACA,eAAepB,UAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport React from 'react';\r\nimport createChainedFunction from './createChainedFunction';\r\n\r\nfunction isTrivialHref(href) {\r\n  return !href || href.trim() === '#';\r\n}\r\n/**\r\n * There are situations due to browser quirks or Bootstrap CSS where\r\n * an anchor tag is needed, when semantically a button tag is the\r\n * better choice. SafeAnchor ensures that when an anchor is used like a\r\n * button its accessible. It also emulates input `disabled` behavior for\r\n * links, which is usually desirable for Buttons, NavItems, DropdownItems, etc.\r\n */\r\n\r\n\r\nvar SafeAnchor = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\r\n  var _ref$as = _ref.as,\r\n      Component = _ref$as === void 0 ? 'a' : _ref$as,\r\n      disabled = _ref.disabled,\r\n      onKeyDown = _ref.onKeyDown,\r\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"disabled\", \"onKeyDown\"]);\r\n\r\n  var handleClick = function handleClick(event) {\r\n    var href = props.href,\r\n        onClick = props.onClick;\r\n\r\n    if (disabled || isTrivialHref(href)) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (disabled) {\r\n      event.stopPropagation();\r\n      return;\r\n    }\r\n\r\n    if (onClick) {\r\n      onClick(event);\r\n    }\r\n  };\r\n\r\n  var handleKeyDown = function handleKeyDown(event) {\r\n    if (event.key === ' ') {\r\n      event.preventDefault();\r\n      handleClick(event);\r\n    }\r\n  };\r\n\r\n  if (isTrivialHref(props.href)) {\r\n    props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\r\n    // otherwise, the cursor incorrectly styled (except with role='button')\r\n\r\n    props.href = props.href || '#';\r\n  }\r\n\r\n  if (disabled) {\r\n    props.tabIndex = -1;\r\n    props['aria-disabled'] = true;\r\n  }\r\n\r\n  return /*#__PURE__*/React.createElement(Component, _extends({\r\n    ref: ref\r\n  }, props, {\r\n    onClick: handleClick,\r\n    onKeyDown: createChainedFunction(handleKeyDown, onKeyDown)\r\n  }));\r\n});\r\nSafeAnchor.displayName = 'SafeAnchor';\r\nexport default SafeAnchor;"]},"metadata":{},"sourceType":"module"}