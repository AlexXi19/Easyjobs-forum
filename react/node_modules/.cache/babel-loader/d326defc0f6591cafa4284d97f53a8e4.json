{"ast":null,"code":"import _slicedToArray from\"/Users/Kevin/Desktop/Platform/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";// nodejs library that concatenates classes\nimport classNames from\"classnames\";// nodejs library to set properties for components\n// @material-ui/core components\nimport{makeStyles}from\"@material-ui/core/styles\";import MenuItem from\"@material-ui/core/MenuItem\";import MenuList from\"@material-ui/core/MenuList\";import ClickAwayListener from\"@material-ui/core/ClickAwayListener\";import Paper from\"@material-ui/core/Paper\";import Grow from\"@material-ui/core/Grow\";import Divider from\"@material-ui/core/Divider\";import Icon from\"@material-ui/core/Icon\";import Popper from\"@material-ui/core/Popper\";// core components\nimport Button from\"./../CustomButtons/Button.js\";import styles from\"./../../../assets/jss/components/customDropdownStyle.js\";const useStyles=makeStyles(styles);export default function CustomDropdown(props){const _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),anchorEl=_React$useState2[0],setAnchorEl=_React$useState2[1];const handleClick=event=>{if(anchorEl&&anchorEl.contains(event.target)){setAnchorEl(null);}else{setAnchorEl(event.currentTarget);}};const handleClose=param=>{setAnchorEl(null);if(props&&props.onClick){props.onClick(param);}};const handleCloseAway=event=>{if(anchorEl.contains(event.target)){return;}setAnchorEl(null);};const classes=useStyles();const buttonText=props.buttonText,buttonIcon=props.buttonIcon,dropdownList=props.dropdownList,buttonProps=props.buttonProps,dropup=props.dropup,dropdownHeader=props.dropdownHeader,caret=props.caret,hoverColor=props.hoverColor,left=props.left,rtlActive=props.rtlActive,noLiPadding=props.noLiPadding;const caretClasses=classNames({[classes.caret]:true,[classes.caretActive]:Boolean(anchorEl),[classes.caretRTL]:rtlActive});const dropdownItem=classNames({[classes.dropdownItem]:true,[classes[hoverColor+\"Hover\"]]:true,[classes.noLiPadding]:noLiPadding,[classes.dropdownItemRTL]:rtlActive});let icon=null;switch(typeof buttonIcon){case\"object\":icon=/*#__PURE__*/React.createElement(props.buttonIcon,{className:classes.buttonIcon});break;case\"string\":icon=/*#__PURE__*/React.createElement(Icon,{className:classes.buttonIcon},props.buttonIcon);break;default:icon=null;break;}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,Object.assign({\"aria-label\":\"Notifications\",\"aria-owns\":anchorEl?\"menu-list\":null,\"aria-haspopup\":\"true\"},buttonProps,{onClick:handleClick}),icon,buttonText!==undefined?buttonText:null,caret?/*#__PURE__*/React.createElement(\"b\",{className:caretClasses}):null)),/*#__PURE__*/React.createElement(Popper,{open:Boolean(anchorEl),anchorEl:anchorEl,transition:true,disablePortal:true,placement:dropup?left?\"top-start\":\"top\":left?\"bottom-start\":\"bottom\",className:classNames({[classes.popperClose]:!anchorEl,[classes.popperResponsive]:true})},()=>/*#__PURE__*/React.createElement(Grow,{in:Boolean(anchorEl),id:\"menu-list\",style:dropup?{transformOrigin:\"0 100% 0\"}:{transformOrigin:\"0 0 0\"}},/*#__PURE__*/React.createElement(Paper,{className:classes.dropdown},/*#__PURE__*/React.createElement(ClickAwayListener,{onClickAway:handleCloseAway},/*#__PURE__*/React.createElement(MenuList,{role:\"menu\",className:classes.menuList},dropdownHeader!==undefined?/*#__PURE__*/React.createElement(MenuItem,{onClick:()=>handleClose(dropdownHeader),className:classes.dropdownHeader},dropdownHeader):null,dropdownList.map((prop,key)=>{if(prop.divider){return/*#__PURE__*/React.createElement(Divider,{key:key,onClick:()=>handleClose(\"divider\"),className:classes.dropdownDividerItem});}return/*#__PURE__*/React.createElement(MenuItem,{key:key,onClick:()=>handleClose(prop),className:dropdownItem},prop);})))))));}CustomDropdown.defaultProps={caret:true,hoverColor:\"primary\"};","map":{"version":3,"sources":["/Users/Kevin/Desktop/Platform/react/src/views/Component-tools/CustomDropdown/CustomDropdown.js"],"names":["React","classNames","makeStyles","MenuItem","MenuList","ClickAwayListener","Paper","Grow","Divider","Icon","Popper","Button","styles","useStyles","CustomDropdown","props","useState","anchorEl","setAnchorEl","handleClick","event","contains","target","currentTarget","handleClose","param","onClick","handleCloseAway","classes","buttonText","buttonIcon","dropdownList","buttonProps","dropup","dropdownHeader","caret","hoverColor","left","rtlActive","noLiPadding","caretClasses","caretActive","Boolean","caretRTL","dropdownItem","dropdownItemRTL","icon","undefined","popperClose","popperResponsive","transformOrigin","dropdown","menuList","map","prop","key","divider","dropdownDividerItem","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Popper from \"@material-ui/core/Popper\";\n\n// core components\nimport Button from \"./../CustomButtons/Button.js\";\n\nimport styles from \"./../../../assets/jss/components/customDropdownStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomDropdown(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClick = event => {\n    if (anchorEl && anchorEl.contains(event.target)) {\n      setAnchorEl(null);\n    } else {\n      setAnchorEl(event.currentTarget);\n    }\n  };\n  const handleClose = param => {\n    setAnchorEl(null);\n    if (props && props.onClick) {\n      props.onClick(param);\n    }\n  };\n  const handleCloseAway = event => {\n    if (anchorEl.contains(event.target)) {\n      return;\n    }\n    setAnchorEl(null);\n  };\n  const classes = useStyles();\n  const {\n    buttonText,\n    buttonIcon,\n    dropdownList,\n    buttonProps,\n    dropup,\n    dropdownHeader,\n    caret,\n    hoverColor,\n    left,\n    rtlActive,\n    noLiPadding\n  } = props;\n  const caretClasses = classNames({\n    [classes.caret]: true,\n    [classes.caretActive]: Boolean(anchorEl),\n    [classes.caretRTL]: rtlActive\n  });\n  const dropdownItem = classNames({\n    [classes.dropdownItem]: true,\n    [classes[hoverColor + \"Hover\"]]: true,\n    [classes.noLiPadding]: noLiPadding,\n    [classes.dropdownItemRTL]: rtlActive\n  });\n  let icon = null;\n  switch (typeof buttonIcon) {\n    case \"object\":\n      icon = <props.buttonIcon className={classes.buttonIcon} />;\n      break;\n    case \"string\":\n      icon = <Icon className={classes.buttonIcon}>{props.buttonIcon}</Icon>;\n      break;\n    default:\n      icon = null;\n      break;\n  }\n  return (\n    <div>\n      <div>\n        <Button\n          aria-label=\"Notifications\"\n          aria-owns={anchorEl ? \"menu-list\" : null}\n          aria-haspopup=\"true\"\n          {...buttonProps}\n          onClick={handleClick}\n        >\n          {icon}\n          {buttonText !== undefined ? buttonText : null}\n          {caret ? <b className={caretClasses} /> : null}\n        </Button>\n      </div>\n      <Popper\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl}\n        transition\n        disablePortal\n        placement={\n          dropup\n            ? left\n              ? \"top-start\"\n              : \"top\"\n            : left\n            ? \"bottom-start\"\n            : \"bottom\"\n        }\n        className={classNames({\n          [classes.popperClose]: !anchorEl,\n          [classes.popperResponsive]: true\n        })}\n      >\n        {() => (\n          <Grow\n            in={Boolean(anchorEl)}\n            id=\"menu-list\"\n            style={\n              dropup\n                ? { transformOrigin: \"0 100% 0\" }\n                : { transformOrigin: \"0 0 0\" }\n            }\n          >\n            <Paper className={classes.dropdown}>\n              <ClickAwayListener onClickAway={handleCloseAway}>\n                <MenuList role=\"menu\" className={classes.menuList}>\n                  {dropdownHeader !== undefined ? (\n                    <MenuItem\n                      onClick={() => handleClose(dropdownHeader)}\n                      className={classes.dropdownHeader}\n                    >\n                      {dropdownHeader}\n                    </MenuItem>\n                  ) : null}\n                  {dropdownList.map((prop, key) => {\n                    if (prop.divider) {\n                      return (\n                        <Divider\n                          key={key}\n                          onClick={() => handleClose(\"divider\")}\n                          className={classes.dropdownDividerItem}\n                        />\n                      );\n                    }\n                    return (\n                      <MenuItem\n                        key={key}\n                        onClick={() => handleClose(prop)}\n                        className={dropdownItem}\n                      >\n                        {prop}\n                      </MenuItem>\n                    );\n                  })}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </div>\n  );\n}\n\nCustomDropdown.defaultProps = {\n  caret: true,\n  hoverColor: \"primary\"\n};\n\nCustomDropdown.propTypes = {\n  hoverColor: PropTypes.oneOf([\n    \"black\",\n    \"primary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"rose\"\n  ]),\n  buttonText: PropTypes.node,\n  buttonIcon: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  dropdownList: PropTypes.array,\n  buttonProps: PropTypes.object,\n  dropup: PropTypes.bool,\n  dropdownHeader: PropTypes.node,\n  rtlActive: PropTypes.bool,\n  caret: PropTypes.bool,\n  left: PropTypes.bool,\n  noLiPadding: PropTypes.bool,\n  // function that retuns the selected item\n  onClick: PropTypes.func\n};\n"]},"metadata":{},"sourceType":"module"}