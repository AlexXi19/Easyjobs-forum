{"ast":null,"code":"import baseKeys from './_baseKeys.js';\nimport getTag from './_getTag.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport stringSize from './_stringSize.js';\n/** `Object#toString` result references. */\n\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n/**\r\n * Gets the size of `collection` by returning its length for array-like\r\n * values or the number of own enumerable string keyed properties for objects.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Collection\r\n * @param {Array|Object|string} collection The collection to inspect.\r\n * @returns {number} Returns the collection size.\r\n * @example\r\n *\r\n * _.size([1, 2, 3]);\r\n * // => 3\r\n *\r\n * _.size({ 'a': 1, 'b': 2 });\r\n * // => 2\r\n *\r\n * _.size('pebbles');\r\n * // => 7\r\n */\n\nfunction size(collection) {\n  if (collection == null) {\n    return 0;\n  }\n\n  if (isArrayLike(collection)) {\n    return isString(collection) ? stringSize(collection) : collection.length;\n  }\n\n  var tag = getTag(collection);\n\n  if (tag == mapTag || tag == setTag) {\n    return collection.size;\n  }\n\n  return baseKeys(collection).length;\n}\n\nexport default size;","map":{"version":3,"sources":["C:/Users/xuebi/Desktop/EasyJobs/react/node_modules/lodash-es/size.js"],"names":["baseKeys","getTag","isArrayLike","isString","stringSize","mapTag","setTag","size","collection","length","tag"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA;;AACA,IAAIC,MAAM,GAAG,cAAb;AAAA,IACIC,MAAM,GAAG,cADb;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,IAAT,CAAcC,UAAd,EAA0B;AACxB,MAAIA,UAAU,IAAI,IAAlB,EAAwB;AACtB,WAAO,CAAP;AACD;;AACD,MAAIN,WAAW,CAACM,UAAD,CAAf,EAA6B;AAC3B,WAAOL,QAAQ,CAACK,UAAD,CAAR,GAAuBJ,UAAU,CAACI,UAAD,CAAjC,GAAgDA,UAAU,CAACC,MAAlE;AACD;;AACD,MAAIC,GAAG,GAAGT,MAAM,CAACO,UAAD,CAAhB;;AACA,MAAIE,GAAG,IAAIL,MAAP,IAAiBK,GAAG,IAAIJ,MAA5B,EAAoC;AAClC,WAAOE,UAAU,CAACD,IAAlB;AACD;;AACD,SAAOP,QAAQ,CAACQ,UAAD,CAAR,CAAqBC,MAA5B;AACD;;AAED,eAAeF,IAAf","sourcesContent":["import baseKeys from './_baseKeys.js';\r\nimport getTag from './_getTag.js';\r\nimport isArrayLike from './isArrayLike.js';\r\nimport isString from './isString.js';\r\nimport stringSize from './_stringSize.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar mapTag = '[object Map]',\r\n    setTag = '[object Set]';\r\n\r\n/**\r\n * Gets the size of `collection` by returning its length for array-like\r\n * values or the number of own enumerable string keyed properties for objects.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Collection\r\n * @param {Array|Object|string} collection The collection to inspect.\r\n * @returns {number} Returns the collection size.\r\n * @example\r\n *\r\n * _.size([1, 2, 3]);\r\n * // => 3\r\n *\r\n * _.size({ 'a': 1, 'b': 2 });\r\n * // => 2\r\n *\r\n * _.size('pebbles');\r\n * // => 7\r\n */\r\nfunction size(collection) {\r\n  if (collection == null) {\r\n    return 0;\r\n  }\r\n  if (isArrayLike(collection)) {\r\n    return isString(collection) ? stringSize(collection) : collection.length;\r\n  }\r\n  var tag = getTag(collection);\r\n  if (tag == mapTag || tag == setTag) {\r\n    return collection.size;\r\n  }\r\n  return baseKeys(collection).length;\r\n}\r\n\r\nexport default size;\r\n"]},"metadata":{},"sourceType":"module"}