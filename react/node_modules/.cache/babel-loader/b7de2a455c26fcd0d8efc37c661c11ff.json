{"ast":null,"code":"import root from './_root.js';\nimport toInteger from './toInteger.js';\nimport toNumber from './toNumber.js';\nimport toString from './toString.js';\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsFinite = root.isFinite,\n    nativeMin = Math.min;\n/**\r\n * Creates a function like `_.round`.\r\n *\r\n * @private\r\n * @param {string} methodName The name of the `Math` method to use when rounding.\r\n * @returns {Function} Returns the new round function.\r\n */\n\nfunction createRound(methodName) {\n  var func = Math[methodName];\n  return function (number, precision) {\n    number = toNumber(number);\n    precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n\n    if (precision && nativeIsFinite(number)) {\n      // Shift with exponential notation to avoid floating-point issues.\n      // See [MDN](https://mdn.io/round#Examples) for more details.\n      var pair = (toString(number) + 'e').split('e'),\n          value = func(pair[0] + 'e' + (+pair[1] + precision));\n      pair = (toString(value) + 'e').split('e');\n      return +(pair[0] + 'e' + (+pair[1] - precision));\n    }\n\n    return func(number);\n  };\n}\n\nexport default createRound;","map":{"version":3,"sources":["C:/Users/xuebi/Desktop/EasyJobs/react/node_modules/lodash-es/_createRound.js"],"names":["root","toInteger","toNumber","toString","nativeIsFinite","isFinite","nativeMin","Math","min","createRound","methodName","func","number","precision","pair","split","value"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA;;AACA,IAAIC,cAAc,GAAGJ,IAAI,CAACK,QAA1B;AAAA,IACIC,SAAS,GAAGC,IAAI,CAACC,GADrB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAqBC,UAArB,EAAiC;AAC/B,MAAIC,IAAI,GAAGJ,IAAI,CAACG,UAAD,CAAf;AACA,SAAO,UAASE,MAAT,EAAiBC,SAAjB,EAA4B;AACjCD,IAAAA,MAAM,GAAGV,QAAQ,CAACU,MAAD,CAAjB;AACAC,IAAAA,SAAS,GAAGA,SAAS,IAAI,IAAb,GAAoB,CAApB,GAAwBP,SAAS,CAACL,SAAS,CAACY,SAAD,CAAV,EAAuB,GAAvB,CAA7C;;AACA,QAAIA,SAAS,IAAIT,cAAc,CAACQ,MAAD,CAA/B,EAAyC;AACvC;AACA;AACA,UAAIE,IAAI,GAAG,CAACX,QAAQ,CAACS,MAAD,CAAR,GAAmB,GAApB,EAAyBG,KAAzB,CAA+B,GAA/B,CAAX;AAAA,UACIC,KAAK,GAAGL,IAAI,CAACG,IAAI,CAAC,CAAD,CAAJ,GAAU,GAAV,IAAiB,CAACA,IAAI,CAAC,CAAD,CAAL,GAAWD,SAA5B,CAAD,CADhB;AAGAC,MAAAA,IAAI,GAAG,CAACX,QAAQ,CAACa,KAAD,CAAR,GAAkB,GAAnB,EAAwBD,KAAxB,CAA8B,GAA9B,CAAP;AACA,aAAO,EAAED,IAAI,CAAC,CAAD,CAAJ,GAAU,GAAV,IAAiB,CAACA,IAAI,CAAC,CAAD,CAAL,GAAWD,SAA5B,CAAF,CAAP;AACD;;AACD,WAAOF,IAAI,CAACC,MAAD,CAAX;AACD,GAbD;AAcD;;AAED,eAAeH,WAAf","sourcesContent":["import root from './_root.js';\r\nimport toInteger from './toInteger.js';\r\nimport toNumber from './toNumber.js';\r\nimport toString from './toString.js';\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeIsFinite = root.isFinite,\r\n    nativeMin = Math.min;\r\n\r\n/**\r\n * Creates a function like `_.round`.\r\n *\r\n * @private\r\n * @param {string} methodName The name of the `Math` method to use when rounding.\r\n * @returns {Function} Returns the new round function.\r\n */\r\nfunction createRound(methodName) {\r\n  var func = Math[methodName];\r\n  return function(number, precision) {\r\n    number = toNumber(number);\r\n    precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\r\n    if (precision && nativeIsFinite(number)) {\r\n      // Shift with exponential notation to avoid floating-point issues.\r\n      // See [MDN](https://mdn.io/round#Examples) for more details.\r\n      var pair = (toString(number) + 'e').split('e'),\r\n          value = func(pair[0] + 'e' + (+pair[1] + precision));\r\n\r\n      pair = (toString(value) + 'e').split('e');\r\n      return +(pair[0] + 'e' + (+pair[1] - precision));\r\n    }\r\n    return func(number);\r\n  };\r\n}\r\n\r\nexport default createRound;\r\n"]},"metadata":{},"sourceType":"module"}