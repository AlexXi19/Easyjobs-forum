{"ast":null,"code":"import _slicedToArray from \"/Users/Kevin/Desktop/Platform/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Kevin/Desktop/Platform/react/src/components/PostForm.js\";\nimport React, { useState } from \"react\";\nimport { Grid, Form, Button, Message, Icon } from \"semantic-ui-react\";\nimport Card from \"react-bootstrap/Card\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\n\nfunction PostForm() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        submitted = _useState2[0],\n        setSubmitted = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        formError = _useState4[0],\n        setFormError = _useState4[1];\n\n  const date = new Date();\n  const options = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\"\n  };\n\n  const _useState5 = useState({\n    id: 0,\n    name: \"\",\n    title: \"\",\n    text: \"\"\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        post = _useState6[0],\n        setPost = _useState6[1];\n\n  function handleTextChange(event) {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n\n    if (post.title !== \"\") {\n      setFormError(false);\n    }\n\n    setSubmitted(false);\n    setPost(prevValue => {\n      if (name === \"text\") {\n        return {\n          id: prevValue.id,\n          name: prevValue.name,\n          title: prevValue.title,\n          text: value\n        };\n      } else if (name === \"title\") {\n        return {\n          id: prevValue.id,\n          name: prevValue.name,\n          title: value,\n          text: prevValue.text\n        };\n      }\n    });\n  }\n\n  function onSubmit(event) {\n    event.preventDefault();\n\n    if (post.title === \"\") {\n      setFormError(true);\n      return;\n    }\n\n    setSubmitted(true);\n    setFormError(false);\n    setPost({\n      id: 0,\n      name: \"\",\n      title: \"\",\n      text: \"\"\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    style: {\n      marginTop: \"1%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: \"75vw\",\n      maxWidth: \"1000px\",\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    size: \"large\",\n    onSubmit: onSubmit,\n    className: \"ui form success\",\n    error: formError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      \"aria-label\": \"recipe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, \"R\"),\n    titleTypographyProps: {\n      variant: \"subtitle2\"\n    } // title={props.name}\n    ,\n    title: \"\\u4F5C\\u8005\",\n    subheader: date.toLocaleDateString(undefined, options),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }), submitted && /*#__PURE__*/React.createElement(Message, {\n    success: true,\n    header: \"Post Created\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }), \" Post Created\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    error: formError && {\n      content: \"请输入你的标题\",\n      pointing: \"below\"\n    },\n    type: \"text\",\n    id: \"title\",\n    name: \"title\",\n    placeholder: \"\\u6807\\u9898\",\n    value: post.title,\n    onChange: handleTextChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.TextArea, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u5185\\u5BB9\",\n    name: \"text\",\n    style: {\n      minHeight: \"30rem\"\n    },\n    rowsMin: 30,\n    value: post.text,\n    onChange: handleTextChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    className: \"ui submit button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, \"\\u53D1\\u5E03\"))))));\n}\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/Kevin/Desktop/Platform/react/src/components/PostForm.js"],"names":["React","useState","Grid","Form","Button","Message","Icon","Card","Avatar","CardHeader","PostForm","submitted","setSubmitted","formError","setFormError","date","Date","options","year","month","day","id","name","title","text","post","setPost","handleTextChange","event","target","value","prevValue","onSubmit","preventDefault","marginTop","height","width","maxWidth","variant","toLocaleDateString","undefined","content","pointing","minHeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Grid, Form, Button, Message, Icon } from \"semantic-ui-react\";\nimport Card from \"react-bootstrap/Card\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\n\nfunction PostForm() {\n  const [submitted, setSubmitted] = useState(false);\n  const [formError, setFormError] = useState(false);\n  const date = new Date();\n  const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\n\n  const [post, setPost] = useState({\n    id: 0,\n    name: \"\",\n    title: \"\",\n    text: \"\",\n  });\n\n  function handleTextChange(event) {\n    const { value, name } = event.target;\n\n    if (post.title !== \"\") {\n      setFormError(false);\n    }\n\n    setSubmitted(false);\n\n    setPost((prevValue) => {\n      if (name === \"text\") {\n        return {\n          id: prevValue.id,\n          name: prevValue.name,\n          title: prevValue.title,\n          text: value,\n        };\n      } else if (name === \"title\") {\n        return {\n          id: prevValue.id,\n          name: prevValue.name,\n          title: value,\n          text: prevValue.text,\n        };\n      }\n    });\n  }\n\n  function onSubmit(event) {\n    event.preventDefault();\n    if (post.title === \"\") {\n      setFormError(true);\n      return;\n    }\n\n    setSubmitted(true);\n    setFormError(false);\n    setPost({ id: 0, name: \"\", title: \"\", text: \"\" });\n  }\n\n  return (\n    <div className=\"center\" style={{ marginTop: \"1%\" }}>\n      <Grid style={{ height: \"100%\" }}>\n        <Grid.Column>\n          <Card style={{ width: \"75vw\", maxWidth: \"1000px\", height: \"100%\" }}>\n            <Form\n              size=\"large\"\n              onSubmit={onSubmit}\n              className=\"ui form success\"\n              error={formError}\n            >\n              <CardHeader\n                avatar={<Avatar aria-label=\"recipe\">R</Avatar>}\n                titleTypographyProps={{ variant: \"subtitle2\" }}\n                // title={props.name}\n                title=\"作者\"\n                subheader={date.toLocaleDateString(undefined, options)}\n              />\n              {submitted && (\n                <Message success header=\"Post Created\">\n                  <Icon name=\"check\" /> Post Created\n                </Message>\n              )}\n              <div className=\"form-group\">\n                <Form.Input\n                  error={\n                    formError && {\n                      content: \"请输入你的标题\",\n                      pointing: \"below\",\n                    }\n                  }\n                  type=\"text\"\n                  id=\"title\"\n                  name=\"title\"\n                  placeholder=\"标题\"\n                  value={post.title}\n                  onChange={handleTextChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <Form.TextArea\n                  placeholder=\"请输入内容\"\n                  name=\"text\"\n                  style={{ minHeight: \"30rem\" }}\n                  rowsMin={30}\n                  value={post.text}\n                  onChange={handleTextChange}\n                />\n              </div>\n\n              <Button primary className=\"ui submit button\">\n                发布\n              </Button>\n            </Form>\n          </Card>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n}\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}