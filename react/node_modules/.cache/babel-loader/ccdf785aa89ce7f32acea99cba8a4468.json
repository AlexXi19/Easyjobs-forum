{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createHTMLImage, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\r\n * An event can contain an image or icon label.\r\n */\n\nfunction FeedLabel(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      icon = props.icon,\n      image = props.image;\n  var classes = cx('label', className);\n  var rest = getUnhandledProps(FeedLabel, props);\n  var ElementType = getElementType(FeedLabel, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content, Icon.create(icon, {\n    autoGenerateKey: false\n  }), createHTMLImage(image));\n}\n\nFeedLabel.handledProps = [\"as\", \"children\", \"className\", \"content\", \"icon\", \"image\"];\nFeedLabel.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** An event can contain icon label. */\n  icon: customPropTypes.itemShorthand,\n\n  /** An event can contain image label. */\n  image: customPropTypes.itemShorthand\n} : {};\nexport default FeedLabel;","map":{"version":3,"sources":["C:/Users/xuebi/Desktop/EasyJobs/react/node_modules/semantic-ui-react/dist/es/views/Feed/FeedLabel.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","createHTMLImage","customPropTypes","getElementType","getUnhandledProps","Icon","FeedLabel","props","children","className","content","icon","image","classes","rest","ElementType","isNil","createElement","create","autoGenerateKey","handledProps","propTypes","process","env","NODE_ENV","as","elementType","node","string","contentShorthand","itemShorthand"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,eAAzC,EAA0DC,cAA1D,EAA0EC,iBAA1E,QAAmG,WAAnG;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA;AACA;AACA;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;AAAA,MAEIC,OAAO,GAAGH,KAAK,CAACG,OAFpB;AAAA,MAGIC,IAAI,GAAGJ,KAAK,CAACI,IAHjB;AAAA,MAIIC,KAAK,GAAGL,KAAK,CAACK,KAJlB;AAKA,MAAIC,OAAO,GAAGhB,EAAE,CAAC,OAAD,EAAUY,SAAV,CAAhB;AACA,MAAIK,IAAI,GAAGV,iBAAiB,CAACE,SAAD,EAAYC,KAAZ,CAA5B;AACA,MAAIQ,WAAW,GAAGZ,cAAc,CAACG,SAAD,EAAYC,KAAZ,CAAhC;;AAEA,MAAI,CAACP,aAAa,CAACgB,KAAd,CAAoBR,QAApB,CAAL,EAAoC;AAClC,WAAO,aAAaT,KAAK,CAACkB,aAAN,CAAoBF,WAApB,EAAiCnB,QAAQ,CAAC,EAAD,EAAKkB,IAAL,EAAW;AACtEL,MAAAA,SAAS,EAAEI;AAD2D,KAAX,CAAzC,EAEhBL,QAFgB,CAApB;AAGD;;AAED,SAAO,aAAaT,KAAK,CAACkB,aAAN,CAAoBF,WAApB,EAAiCnB,QAAQ,CAAC,EAAD,EAAKkB,IAAL,EAAW;AACtEL,IAAAA,SAAS,EAAEI;AAD2D,GAAX,CAAzC,EAEhBH,OAFgB,EAEPL,IAAI,CAACa,MAAL,CAAYP,IAAZ,EAAkB;AAC7BQ,IAAAA,eAAe,EAAE;AADY,GAAlB,CAFO,EAIhBlB,eAAe,CAACW,KAAD,CAJC,CAApB;AAKD;;AAEDN,SAAS,CAACc,YAAV,GAAyB,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,SAAhC,EAA2C,MAA3C,EAAmD,OAAnD,CAAzB;AACAd,SAAS,CAACe,SAAV,GAAsBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC5D;AACAC,EAAAA,EAAE,EAAE3B,SAAS,CAAC4B,WAF8C;;AAI5D;AACAlB,EAAAA,QAAQ,EAAEV,SAAS,CAAC6B,IALwC;;AAO5D;AACAlB,EAAAA,SAAS,EAAEX,SAAS,CAAC8B,MARuC;;AAU5D;AACAlB,EAAAA,OAAO,EAAER,eAAe,CAAC2B,gBAXmC;;AAa5D;AACAlB,EAAAA,IAAI,EAAET,eAAe,CAAC4B,aAdsC;;AAgB5D;AACAlB,EAAAA,KAAK,EAAEV,eAAe,CAAC4B;AAjBqC,CAAxC,GAkBlB,EAlBJ;AAmBA,eAAexB,SAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport cx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { childrenUtils, createHTMLImage, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\r\nimport Icon from '../../elements/Icon';\r\n/**\r\n * An event can contain an image or icon label.\r\n */\r\n\r\nfunction FeedLabel(props) {\r\n  var children = props.children,\r\n      className = props.className,\r\n      content = props.content,\r\n      icon = props.icon,\r\n      image = props.image;\r\n  var classes = cx('label', className);\r\n  var rest = getUnhandledProps(FeedLabel, props);\r\n  var ElementType = getElementType(FeedLabel, props);\r\n\r\n  if (!childrenUtils.isNil(children)) {\r\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\r\n      className: classes\r\n    }), children);\r\n  }\r\n\r\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\r\n    className: classes\r\n  }), content, Icon.create(icon, {\r\n    autoGenerateKey: false\r\n  }), createHTMLImage(image));\r\n}\r\n\r\nFeedLabel.handledProps = [\"as\", \"children\", \"className\", \"content\", \"icon\", \"image\"];\r\nFeedLabel.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: PropTypes.elementType,\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** Shorthand for primary content. */\r\n  content: customPropTypes.contentShorthand,\r\n\r\n  /** An event can contain icon label. */\r\n  icon: customPropTypes.itemShorthand,\r\n\r\n  /** An event can contain image label. */\r\n  image: customPropTypes.itemShorthand\r\n} : {};\r\nexport default FeedLabel;"]},"metadata":{},"sourceType":"module"}