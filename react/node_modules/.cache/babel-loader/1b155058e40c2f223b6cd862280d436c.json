{"ast":null,"code":"import _slicedToArray from \"/Users/Kevin/Desktop/Platform/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Kevin/Desktop/Platform/react/src/components/Comment.js\";\nimport React, { useState } from \"react\";\nimport { Button, Comment, Form, Header } from 'semantic-ui-react';\n\nfunction Commented(props) {\n  const _props$comment = props.comment,\n        name = _props$comment.name,\n        message = _props$comment.message,\n        time = _props$comment.time;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        clicked = _useState2[0],\n        setClicked = _useState2[1];\n\n  const _useState3 = useState(props.comment.reply),\n        _useState4 = _slicedToArray(_useState3, 2),\n        reply = _useState4[0],\n        setReply = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        inputText = _useState6[0],\n        setInputText = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        replyName = _useState8[0],\n        setReplyName = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        id = _useState10[0],\n        setID = _useState10[1]; //  var lastID=Math.max.apply(id.map((item)=>{\n  //    return id;\n  //  }));\n\n\n  function uniqueID() {\n    return Math.floor(Math.random() * Date.now());\n  }\n\n  function handleChange(event) {\n    const newValue = event.target.value;\n    setInputText(newValue);\n    setReplyName(\"Alex Xi\");\n    setID(uniqueID());\n  }\n\n  function handleClicked() {\n    setClicked(!clicked);\n  }\n\n  function handleSubmit() {\n    setReply(prevItems => {\n      return [...prevItems, [{\n        id: id,\n        name: replyName,\n        message: inputText\n      }]];\n    }); // props.addComment(reply);\n\n    setInputText(\"\");\n  }\n\n  const nestedComments = (reply || []).map(comment => {\n    return /*#__PURE__*/React.createElement(Commented, {\n      key: comment.id,\n      comment: comment,\n      name: name,\n      type: \"children\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    });\n  });\n  return (\n    /*#__PURE__*/\n    //   <Comment.Group>\n    // <Header as='h3' dividing>\n    //   Comments\n    // </Header>\n    React.createElement(Comment, {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Avatar, {\n      src: \"https://react.semantic-ui.com/images/avatar/small/matt.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Comment.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Author, {\n      as: \"a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, name), /*#__PURE__*/React.createElement(Comment.Metadata, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, time)), /*#__PURE__*/React.createElement(Comment.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, message), /*#__PURE__*/React.createElement(Comment.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Action, {\n      onClick: handleClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, clicked ? \"Close\" : \"Reply\")), clicked ? /*#__PURE__*/React.createElement(Form, {\n      reply: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.TextArea, {\n      onChange: handleChange,\n      value: inputText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      content: \"Add Reply\",\n      labelPosition: \"left\",\n      icon: \"edit\",\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 6\n      }\n    })) : null, nestedComments)) //   { <Form reply>\n    //     <Form.TextArea />\n    //     <Button content='Add Reply' labelPosition='left' icon='edit' primary />\n    //   </Form>\n    // </Comment.Group> }\n\n  );\n} // export default function Comment(props) {\n//   const { name, message, time } = props.comment;\n//   return (\n//     <div className=\"media mb-3\">\n//       <img\n//         className=\"mr-3 bg-light rounded\"\n//         width=\"48\"\n//         height=\"48\"\n//         src={`https://picsum.photos/200/300`}\n//         alt={name}\n//       />\n//       <div className=\"media-body p-2 shadow-sm rounded bg-light border\">\n//         <small className=\"float-right text-muted\">{time}</small>\n//         <h6 className=\"mt-0 mb-1 text-muted\">{name}</h6>\n//         {message}\n//       </div>\n//     </div>\n//   );\n// }\n\n\nexport default Commented;","map":{"version":3,"sources":["/Users/Kevin/Desktop/Platform/react/src/components/Comment.js"],"names":["React","useState","Button","Comment","Form","Header","Commented","props","comment","name","message","time","clicked","setClicked","reply","setReply","inputText","setInputText","replyName","setReplyName","id","setID","uniqueID","Math","floor","random","Date","now","handleChange","event","newValue","target","value","handleClicked","handleSubmit","prevItems","nestedComments","map"],"mappings":"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","sourcesContent":["import React ,{useState} from \"react\";\nimport { Button, Comment, Form, Header } from 'semantic-ui-react'\n\nfunction Commented (props) {\n  const { name, message, time} = props.comment;\n  const [clicked,setClicked]=useState(false);\n  const [reply,setReply]=useState(props.comment.reply);\n  const [inputText, setInputText] = useState(\"\");\n  const [replyName,setReplyName]=useState(\"\");\n  const [id,setID]=useState(0);\n  //  var lastID=Math.max.apply(id.map((item)=>{\n  //    return id;\n  //  }));\n\n\n \n   function uniqueID() {\n    return Math.floor(Math.random() * Date.now())\n    }\n\n  function handleChange(event){\n const newValue=event.target.value;\n setInputText(newValue);\n setReplyName(\"Alex Xi\");\n setID(uniqueID());\n\n  }\n\n  \n  function handleClicked(){\n   setClicked(!clicked);\n   }\n   function handleSubmit(){\n    \n     setReply((prevItems)=>{\n       return[...prevItems,[{\n         id:id,\n        name: replyName,\n        message:inputText\n       }\n       ]];\n     });\n    // props.addComment(reply);\n     setInputText(\"\");\n   }\nconst nestedComments= (reply||[]).map((comment)=>{\n\n return <Commented key={comment.id} comment={comment} name={name} type=\"children\"/>    \n});\n\n return( \n  //   <Comment.Group>\n  // <Header as='h3' dividing>\n  //   Comments\n  // </Header>\n\n  <Comment className=\"comment\">\n    <Comment.Avatar src='https://react.semantic-ui.com/images/avatar/small/matt.jpg' />\n    <Comment.Content>\n      <Comment.Author as='a'>{name}</Comment.Author>\n      <Comment.Metadata>\n        <div>{time}</div>\n      </Comment.Metadata>\n      <Comment.Text>{message}</Comment.Text>\n      \n      <Comment.Actions>\n        <Comment.Action onClick={handleClicked} >{clicked ? \"Close\" : \"Reply\"}</Comment.Action>\n       \n      </Comment.Actions>\n  \n      { clicked? (<Form reply onSubmit={handleSubmit} >\n     <Form.TextArea onChange={handleChange} value={inputText}/>\n     <Button content='Add Reply' labelPosition='left' icon='edit' primary />\n   </Form>):null}\n   {nestedComments}\n    </Comment.Content>\n \n{/*    \n   {reply.map((content,index)=>(\n    <Comment.Text key={index}>{content}</Comment.Text>\n   ))} */}\n\n\n\n  </Comment>\n\n\n//   { <Form reply>\n//     <Form.TextArea />\n//     <Button content='Add Reply' labelPosition='left' icon='edit' primary />\n//   </Form>\n// </Comment.Group> }\n)}\n// export default function Comment(props) {\n//   const { name, message, time } = props.comment;\n\n//   return (\n//     <div className=\"media mb-3\">\n//       <img\n//         className=\"mr-3 bg-light rounded\"\n//         width=\"48\"\n//         height=\"48\"\n//         src={`https://picsum.photos/200/300`}\n//         alt={name}\n//       />\n\n//       <div className=\"media-body p-2 shadow-sm rounded bg-light border\">\n//         <small className=\"float-right text-muted\">{time}</small>\n//         <h6 className=\"mt-0 mb-1 text-muted\">{name}</h6>\n//         {message}\n//       </div>\n//     </div>\n//   );\n// }\n\nexport default Commented;"]},"metadata":{},"sourceType":"module"}