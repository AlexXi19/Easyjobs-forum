{"ast":null,"code":"import _slicedToArray from \"C:/Users/xuebi/AppData/Roaming/npm/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\xuebi\\\\Desktop\\\\EasyJobs\\\\react\\\\src\\\\views\\\\Component-tools\\\\CustomDropdown\\\\CustomDropdown.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Popper from \"@material-ui/core/Popper\"; // core components\n\nimport Button from \"./../CustomButtons/Button.js\";\nimport styles from \"./../../../assets/jss/components/customDropdownStyle.js\";\nconst useStyles = makeStyles(styles);\nexport default function CustomDropdown(props) {\n  _s();\n\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        anchorEl = _React$useState2[0],\n        setAnchorEl = _React$useState2[1];\n\n  const handleClick = event => {\n    if (anchorEl && anchorEl.contains(event.target)) {\n      setAnchorEl(null);\n    } else {\n      setAnchorEl(event.currentTarget);\n    }\n  };\n\n  const handleClose = param => {\n    setAnchorEl(null);\n\n    if (props && props.onClick) {\n      props.onClick(param);\n    }\n  };\n\n  const handleCloseAway = event => {\n    if (anchorEl.contains(event.target)) {\n      return;\n    }\n\n    setAnchorEl(null);\n  };\n\n  const classes = useStyles();\n  const buttonText = props.buttonText,\n        buttonIcon = props.buttonIcon,\n        dropdownList = props.dropdownList,\n        buttonProps = props.buttonProps,\n        dropup = props.dropup,\n        dropdownHeader = props.dropdownHeader,\n        caret = props.caret,\n        hoverColor = props.hoverColor,\n        left = props.left,\n        rtlActive = props.rtlActive,\n        noLiPadding = props.noLiPadding;\n  const caretClasses = classNames({\n    [classes.caret]: true,\n    [classes.caretActive]: Boolean(anchorEl),\n    [classes.caretRTL]: rtlActive\n  });\n  const dropdownItem = classNames({\n    [classes.dropdownItem]: true,\n    [classes[hoverColor + \"Hover\"]]: true,\n    [classes.noLiPadding]: noLiPadding,\n    [classes.dropdownItemRTL]: rtlActive\n  });\n  let icon = null;\n\n  switch (typeof buttonIcon) {\n    case \"object\":\n      icon = /*#__PURE__*/React.createElement(props.buttonIcon, {\n        className: classes.buttonIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 14\n        }\n      });\n      break;\n\n    case \"string\":\n      icon = /*#__PURE__*/React.createElement(Icon, {\n        className: classes.buttonIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 14\n        }\n      }, props.buttonIcon);\n      break;\n\n    default:\n      icon = null;\n      break;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, Object.assign({\n    \"aria-label\": \"Notifications\",\n    \"aria-owns\": anchorEl ? \"menu-list\" : null,\n    \"aria-haspopup\": \"true\"\n  }, buttonProps, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), icon, buttonText !== undefined ? buttonText : null, caret ? /*#__PURE__*/React.createElement(\"b\", {\n    className: caretClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 20\n    }\n  }) : null)), /*#__PURE__*/React.createElement(Popper, {\n    open: Boolean(anchorEl),\n    anchorEl: anchorEl,\n    transition: true,\n    disablePortal: true,\n    placement: dropup ? left ? \"top-start\" : \"top\" : left ? \"bottom-start\" : \"bottom\",\n    className: classNames({\n      [classes.popperClose]: !anchorEl,\n      [classes.popperResponsive]: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, () => /*#__PURE__*/React.createElement(Grow, {\n    in: Boolean(anchorEl),\n    id: \"menu-list\",\n    style: dropup ? {\n      transformOrigin: \"0 100% 0\"\n    } : {\n      transformOrigin: \"0 0 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.dropdown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: handleCloseAway,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MenuList, {\n    role: \"menu\",\n    className: classes.menuList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, dropdownHeader !== undefined ? /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: () => handleClose(dropdownHeader),\n    className: classes.dropdownHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, dropdownHeader) : null, dropdownList.map((prop, key) => {\n    if (prop.divider) {\n      return /*#__PURE__*/React.createElement(Divider, {\n        key: key,\n        onClick: () => handleClose(\"divider\"),\n        className: classes.dropdownDividerItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: key,\n      onClick: () => handleClose(prop),\n      className: dropdownItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 23\n      }\n    }, prop);\n  })))))));\n}\n\n_s(CustomDropdown, \"rR4YbuwDsNH7kIPxRuzEnRkbEdw=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomDropdown;\nCustomDropdown.defaultProps = {\n  caret: true,\n  hoverColor: \"primary\"\n};\nCustomDropdown.propTypes = {\n  hoverColor: PropTypes.oneOf([\"black\", \"primary\", \"info\", \"success\", \"warning\", \"danger\", \"rose\"]),\n  buttonText: PropTypes.node,\n  buttonIcon: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  dropdownList: PropTypes.array,\n  buttonProps: PropTypes.object,\n  dropup: PropTypes.bool,\n  dropdownHeader: PropTypes.node,\n  rtlActive: PropTypes.bool,\n  caret: PropTypes.bool,\n  left: PropTypes.bool,\n  noLiPadding: PropTypes.bool,\n  // function that retuns the selected item\n  onClick: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomDropdown\");","map":{"version":3,"sources":["C:/Users/xuebi/Desktop/EasyJobs/react/src/views/Component-tools/CustomDropdown/CustomDropdown.js"],"names":["React","classNames","PropTypes","makeStyles","MenuItem","MenuList","ClickAwayListener","Paper","Grow","Divider","Icon","Popper","Button","styles","useStyles","CustomDropdown","props","useState","anchorEl","setAnchorEl","handleClick","event","contains","target","currentTarget","handleClose","param","onClick","handleCloseAway","classes","buttonText","buttonIcon","dropdownList","buttonProps","dropup","dropdownHeader","caret","hoverColor","left","rtlActive","noLiPadding","caretClasses","caretActive","Boolean","caretRTL","dropdownItem","dropdownItemRTL","icon","undefined","popperClose","popperResponsive","transformOrigin","dropdown","menuList","map","prop","key","divider","dropdownDividerItem","defaultProps","propTypes","oneOf","node","oneOfType","object","string","array","bool","func"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\n\r\n// core components\r\nimport Button from \"./../CustomButtons/Button.js\";\r\n\r\nimport styles from \"./../../../assets/jss/components/customDropdownStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CustomDropdown(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const handleClick = event => {\r\n    if (anchorEl && anchorEl.contains(event.target)) {\r\n      setAnchorEl(null);\r\n    } else {\r\n      setAnchorEl(event.currentTarget);\r\n    }\r\n  };\r\n  const handleClose = param => {\r\n    setAnchorEl(null);\r\n    if (props && props.onClick) {\r\n      props.onClick(param);\r\n    }\r\n  };\r\n  const handleCloseAway = event => {\r\n    if (anchorEl.contains(event.target)) {\r\n      return;\r\n    }\r\n    setAnchorEl(null);\r\n  };\r\n  const classes = useStyles();\r\n  const {\r\n    buttonText,\r\n    buttonIcon,\r\n    dropdownList,\r\n    buttonProps,\r\n    dropup,\r\n    dropdownHeader,\r\n    caret,\r\n    hoverColor,\r\n    left,\r\n    rtlActive,\r\n    noLiPadding\r\n  } = props;\r\n  const caretClasses = classNames({\r\n    [classes.caret]: true,\r\n    [classes.caretActive]: Boolean(anchorEl),\r\n    [classes.caretRTL]: rtlActive\r\n  });\r\n  const dropdownItem = classNames({\r\n    [classes.dropdownItem]: true,\r\n    [classes[hoverColor + \"Hover\"]]: true,\r\n    [classes.noLiPadding]: noLiPadding,\r\n    [classes.dropdownItemRTL]: rtlActive\r\n  });\r\n  let icon = null;\r\n  switch (typeof buttonIcon) {\r\n    case \"object\":\r\n      icon = <props.buttonIcon className={classes.buttonIcon} />;\r\n      break;\r\n    case \"string\":\r\n      icon = <Icon className={classes.buttonIcon}>{props.buttonIcon}</Icon>;\r\n      break;\r\n    default:\r\n      icon = null;\r\n      break;\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Button\r\n          aria-label=\"Notifications\"\r\n          aria-owns={anchorEl ? \"menu-list\" : null}\r\n          aria-haspopup=\"true\"\r\n          {...buttonProps}\r\n          onClick={handleClick}\r\n        >\r\n          {icon}\r\n          {buttonText !== undefined ? buttonText : null}\r\n          {caret ? <b className={caretClasses} /> : null}\r\n        </Button>\r\n      </div>\r\n      <Popper\r\n        open={Boolean(anchorEl)}\r\n        anchorEl={anchorEl}\r\n        transition\r\n        disablePortal\r\n        placement={\r\n          dropup\r\n            ? left\r\n              ? \"top-start\"\r\n              : \"top\"\r\n            : left\r\n            ? \"bottom-start\"\r\n            : \"bottom\"\r\n        }\r\n        className={classNames({\r\n          [classes.popperClose]: !anchorEl,\r\n          [classes.popperResponsive]: true\r\n        })}\r\n      >\r\n        {() => (\r\n          <Grow\r\n            in={Boolean(anchorEl)}\r\n            id=\"menu-list\"\r\n            style={\r\n              dropup\r\n                ? { transformOrigin: \"0 100% 0\" }\r\n                : { transformOrigin: \"0 0 0\" }\r\n            }\r\n          >\r\n            <Paper className={classes.dropdown}>\r\n              <ClickAwayListener onClickAway={handleCloseAway}>\r\n                <MenuList role=\"menu\" className={classes.menuList}>\r\n                  {dropdownHeader !== undefined ? (\r\n                    <MenuItem\r\n                      onClick={() => handleClose(dropdownHeader)}\r\n                      className={classes.dropdownHeader}\r\n                    >\r\n                      {dropdownHeader}\r\n                    </MenuItem>\r\n                  ) : null}\r\n                  {dropdownList.map((prop, key) => {\r\n                    if (prop.divider) {\r\n                      return (\r\n                        <Divider\r\n                          key={key}\r\n                          onClick={() => handleClose(\"divider\")}\r\n                          className={classes.dropdownDividerItem}\r\n                        />\r\n                      );\r\n                    }\r\n                    return (\r\n                      <MenuItem\r\n                        key={key}\r\n                        onClick={() => handleClose(prop)}\r\n                        className={dropdownItem}\r\n                      >\r\n                        {prop}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Grow>\r\n        )}\r\n      </Popper>\r\n    </div>\r\n  );\r\n}\r\n\r\nCustomDropdown.defaultProps = {\r\n  caret: true,\r\n  hoverColor: \"primary\"\r\n};\r\n\r\nCustomDropdown.propTypes = {\r\n  hoverColor: PropTypes.oneOf([\r\n    \"black\",\r\n    \"primary\",\r\n    \"info\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"rose\"\r\n  ]),\r\n  buttonText: PropTypes.node,\r\n  buttonIcon: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n  dropdownList: PropTypes.array,\r\n  buttonProps: PropTypes.object,\r\n  dropup: PropTypes.bool,\r\n  dropdownHeader: PropTypes.node,\r\n  rtlActive: PropTypes.bool,\r\n  caret: PropTypes.bool,\r\n  left: PropTypes.bool,\r\n  noLiPadding: PropTypes.bool,\r\n  // function that retuns the selected item\r\n  onClick: PropTypes.func\r\n};\r\n"]},"metadata":{},"sourceType":"module"}