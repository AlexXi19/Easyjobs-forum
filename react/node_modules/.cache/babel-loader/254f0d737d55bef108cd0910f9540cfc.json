{"ast":null,"code":"import _slicedToArray from \"/Users/alexxi/Desktop/Platform/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexxi/Desktop/Platform/react/src/views/Component-tools/NavPills/NavPills.js\";\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\";\nimport SwipeableViews from \"react-swipeable-views\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\"; // core components\n\nimport GridContainer from \"./../Grid/GridContainer.js\";\nimport GridItem from \"./../Grid/GridItem.js\";\nimport styles from \"assets/jss/components/navPillsStyle.js\";\nconst useStyles = makeStyles(styles);\nexport default function NavPills(props) {\n  const _React$useState = React.useState(props.active),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        active = _React$useState2[0],\n        setActive = _React$useState2[1];\n\n  const handleChange = (event, active) => {\n    setActive(active);\n  };\n\n  const handleChangeIndex = index => {\n    setActive(index);\n  };\n\n  const classes = useStyles();\n  const tabs = props.tabs,\n        direction = props.direction,\n        color = props.color,\n        horizontal = props.horizontal,\n        alignCenter = props.alignCenter;\n  const flexContainerClasses = classNames({\n    [classes.flexContainer]: true,\n    [classes.horizontalDisplay]: horizontal !== undefined\n  });\n  const tabButtons = /*#__PURE__*/React.createElement(Tabs, {\n    classes: {\n      root: classes.root,\n      fixed: classes.fixed,\n      flexContainer: flexContainerClasses,\n      indicator: classes.displayNone\n    },\n    value: active,\n    onChange: handleChange,\n    centered: alignCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, tabs.map((prop, key) => {\n    var icon = {};\n\n    if (prop.tabIcon !== undefined) {\n      icon[\"icon\"] = /*#__PURE__*/React.createElement(prop.tabIcon, {\n        className: classes.tabIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 26\n        }\n      });\n    }\n\n    const pillsClasses = classNames({\n      [classes.pills]: true,\n      [classes.horizontalPills]: horizontal !== undefined,\n      [classes.pillsWithIcons]: prop.tabIcon !== undefined\n    });\n    return /*#__PURE__*/React.createElement(Tab, Object.assign({\n      label: prop.tabButton,\n      key: key\n    }, icon, {\n      classes: {\n        root: pillsClasses,\n        selected: classes[color],\n        wrapper: classes.tabWrapper\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }));\n  }));\n  const tabContent = /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.contentWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SwipeableViews, {\n    axis: direction === \"rtl\" ? \"x-reverse\" : \"x\",\n    index: active,\n    onChangeIndex: handleChangeIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, tabs.map((prop, key) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.tabContent,\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, prop.tabContent);\n  })));\n  return horizontal !== undefined ? /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, Object.assign({}, horizontal.tabsGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), tabButtons), /*#__PURE__*/React.createElement(GridItem, Object.assign({}, horizontal.contentGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), tabContent)) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, tabButtons, tabContent);\n}\nNavPills.defaultProps = {\n  active: 0,\n  color: \"primary\"\n};\nNavPills.propTypes = {\n  // index of the default active pill\n  active: PropTypes.number,\n  tabs: PropTypes.arrayOf(PropTypes.shape({\n    tabButton: PropTypes.string,\n    tabIcon: PropTypes.object,\n    tabContent: PropTypes.node\n  })).isRequired,\n  color: PropTypes.oneOf([\"primary\", \"warning\", \"danger\", \"success\", \"info\", \"rose\"]),\n  direction: PropTypes.string,\n  horizontal: PropTypes.shape({\n    tabsGrid: PropTypes.object,\n    contentGrid: PropTypes.object\n  }),\n  alignCenter: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/alexxi/Desktop/Platform/react/src/views/Component-tools/NavPills/NavPills.js"],"names":["React","classNames","PropTypes","SwipeableViews","makeStyles","Tabs","Tab","GridContainer","GridItem","styles","useStyles","NavPills","props","useState","active","setActive","handleChange","event","handleChangeIndex","index","classes","tabs","direction","color","horizontal","alignCenter","flexContainerClasses","flexContainer","horizontalDisplay","undefined","tabButtons","root","fixed","indicator","displayNone","map","prop","key","icon","tabIcon","pillsClasses","pills","horizontalPills","pillsWithIcons","tabButton","selected","wrapper","tabWrapper","tabContent","contentWrapper","tabsGrid","contentGrid","defaultProps","propTypes","number","arrayOf","shape","string","object","node","isRequired","oneOf","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\nimport SwipeableViews from \"react-swipeable-views\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\n// core components\nimport GridContainer from \"./../Grid/GridContainer.js\";\nimport GridItem from \"./../Grid/GridItem.js\";\n\nimport styles from \"assets/jss/components/navPillsStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function NavPills(props) {\n  const [active, setActive] = React.useState(props.active);\n  const handleChange = (event, active) => {\n    setActive(active);\n  };\n  const handleChangeIndex = index => {\n    setActive(index);\n  };\n  const classes = useStyles();\n  const { tabs, direction, color, horizontal, alignCenter } = props;\n  const flexContainerClasses = classNames({\n    [classes.flexContainer]: true,\n    [classes.horizontalDisplay]: horizontal !== undefined\n  });\n  const tabButtons = (\n    <Tabs\n      classes={{\n        root: classes.root,\n        fixed: classes.fixed,\n        flexContainer: flexContainerClasses,\n        indicator: classes.displayNone\n      }}\n      value={active}\n      onChange={handleChange}\n      centered={alignCenter}\n    >\n      {tabs.map((prop, key) => {\n        var icon = {};\n        if (prop.tabIcon !== undefined) {\n          icon[\"icon\"] = <prop.tabIcon className={classes.tabIcon} />;\n        }\n        const pillsClasses = classNames({\n          [classes.pills]: true,\n          [classes.horizontalPills]: horizontal !== undefined,\n          [classes.pillsWithIcons]: prop.tabIcon !== undefined\n        });\n        return (\n          <Tab\n            label={prop.tabButton}\n            key={key}\n            {...icon}\n            classes={{\n              root: pillsClasses,\n              selected: classes[color],\n              wrapper: classes.tabWrapper\n            }}\n          />\n        );\n      })}\n    </Tabs>\n  );\n  const tabContent = (\n    <div className={classes.contentWrapper}>\n      <SwipeableViews\n        axis={direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n        index={active}\n        onChangeIndex={handleChangeIndex}\n      >\n        {tabs.map((prop, key) => {\n          return (\n            <div className={classes.tabContent} key={key}>\n              {prop.tabContent}\n            </div>\n          );\n        })}\n      </SwipeableViews>\n    </div>\n  );\n  return horizontal !== undefined ? (\n    <GridContainer>\n      <GridItem {...horizontal.tabsGrid}>{tabButtons}</GridItem>\n      <GridItem {...horizontal.contentGrid}>{tabContent}</GridItem>\n    </GridContainer>\n  ) : (\n    <div>\n      {tabButtons}\n      {tabContent}\n    </div>\n  );\n}\n\nNavPills.defaultProps = {\n  active: 0,\n  color: \"primary\"\n};\n\nNavPills.propTypes = {\n  // index of the default active pill\n  active: PropTypes.number,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      tabButton: PropTypes.string,\n      tabIcon: PropTypes.object,\n      tabContent: PropTypes.node\n    })\n  ).isRequired,\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"warning\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\"\n  ]),\n  direction: PropTypes.string,\n  horizontal: PropTypes.shape({\n    tabsGrid: PropTypes.object,\n    contentGrid: PropTypes.object\n  }),\n  alignCenter: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}