{"ast":null,"code":"import arrayEvery from './_arrayEvery.js';\nimport baseEvery from './_baseEvery.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n/**\r\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\r\n * Iteration is stopped once `predicate` returns falsey. The predicate is\r\n * invoked with three arguments: (value, index|key, collection).\r\n *\r\n * **Note:** This method returns `true` for\r\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\r\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\r\n * elements of empty collections.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\r\n *  else `false`.\r\n * @example\r\n *\r\n * _.every([true, 1, null, 'yes'], Boolean);\r\n * // => false\r\n *\r\n * var users = [\r\n *   { 'user': 'barney', 'age': 36, 'active': false },\r\n *   { 'user': 'fred',   'age': 40, 'active': false }\r\n * ];\r\n *\r\n * // The `_.matches` iteratee shorthand.\r\n * _.every(users, { 'user': 'barney', 'active': false });\r\n * // => false\r\n *\r\n * // The `_.matchesProperty` iteratee shorthand.\r\n * _.every(users, ['active', false]);\r\n * // => true\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.every(users, 'active');\r\n * // => false\r\n */\n\nfunction every(collection, predicate, guard) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default every;","map":{"version":3,"sources":["C:/Users/xuebi/Desktop/EasyJobs/react/node_modules/lodash-es/every.js"],"names":["arrayEvery","baseEvery","baseIteratee","isArray","isIterateeCall","every","collection","predicate","guard","func","undefined"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,KAAT,CAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,KAAtC,EAA6C;AAC3C,MAAIC,IAAI,GAAGN,OAAO,CAACG,UAAD,CAAP,GAAsBN,UAAtB,GAAmCC,SAA9C;;AACA,MAAIO,KAAK,IAAIJ,cAAc,CAACE,UAAD,EAAaC,SAAb,EAAwBC,KAAxB,CAA3B,EAA2D;AACzDD,IAAAA,SAAS,GAAGG,SAAZ;AACD;;AACD,SAAOD,IAAI,CAACH,UAAD,EAAaJ,YAAY,CAACK,SAAD,EAAY,CAAZ,CAAzB,CAAX;AACD;;AAED,eAAeF,KAAf","sourcesContent":["import arrayEvery from './_arrayEvery.js';\r\nimport baseEvery from './_baseEvery.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport isArray from './isArray.js';\r\nimport isIterateeCall from './_isIterateeCall.js';\r\n\r\n/**\r\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\r\n * Iteration is stopped once `predicate` returns falsey. The predicate is\r\n * invoked with three arguments: (value, index|key, collection).\r\n *\r\n * **Note:** This method returns `true` for\r\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\r\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\r\n * elements of empty collections.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\r\n *  else `false`.\r\n * @example\r\n *\r\n * _.every([true, 1, null, 'yes'], Boolean);\r\n * // => false\r\n *\r\n * var users = [\r\n *   { 'user': 'barney', 'age': 36, 'active': false },\r\n *   { 'user': 'fred',   'age': 40, 'active': false }\r\n * ];\r\n *\r\n * // The `_.matches` iteratee shorthand.\r\n * _.every(users, { 'user': 'barney', 'active': false });\r\n * // => false\r\n *\r\n * // The `_.matchesProperty` iteratee shorthand.\r\n * _.every(users, ['active', false]);\r\n * // => true\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.every(users, 'active');\r\n * // => false\r\n */\r\nfunction every(collection, predicate, guard) {\r\n  var func = isArray(collection) ? arrayEvery : baseEvery;\r\n  if (guard && isIterateeCall(collection, predicate, guard)) {\r\n    predicate = undefined;\r\n  }\r\n  return func(collection, baseIteratee(predicate, 3));\r\n}\r\n\r\nexport default every;\r\n"]},"metadata":{},"sourceType":"module"}