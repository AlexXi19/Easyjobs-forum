{"ast":null,"code":"import getWrapDetails from './_getWrapDetails.js';\nimport insertWrapDetails from './_insertWrapDetails.js';\nimport setToString from './_setToString.js';\nimport updateWrapDetails from './_updateWrapDetails.js';\n/**\r\n * Sets the `toString` method of `wrapper` to mimic the source of `reference`\r\n * with wrapper details in a comment at the top of the source body.\r\n *\r\n * @private\r\n * @param {Function} wrapper The function to modify.\r\n * @param {Function} reference The reference function.\r\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\r\n * @returns {Function} Returns `wrapper`.\r\n */\n\nfunction setWrapToString(wrapper, reference, bitmask) {\n  var source = reference + '';\n  return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n}\n\nexport default setWrapToString;","map":{"version":3,"sources":["C:/Users/xuebi/Desktop/EasyJobs/react/node_modules/lodash-es/_setWrapToString.js"],"names":["getWrapDetails","insertWrapDetails","setToString","updateWrapDetails","setWrapToString","wrapper","reference","bitmask","source"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,sBAA3B;AACA,OAAOC,iBAAP,MAA8B,yBAA9B;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,iBAAP,MAA8B,yBAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,eAAT,CAAyBC,OAAzB,EAAkCC,SAAlC,EAA6CC,OAA7C,EAAsD;AACpD,MAAIC,MAAM,GAAIF,SAAS,GAAG,EAA1B;AACA,SAAOJ,WAAW,CAACG,OAAD,EAAUJ,iBAAiB,CAACO,MAAD,EAASL,iBAAiB,CAACH,cAAc,CAACQ,MAAD,CAAf,EAAyBD,OAAzB,CAA1B,CAA3B,CAAlB;AACD;;AAED,eAAeH,eAAf","sourcesContent":["import getWrapDetails from './_getWrapDetails.js';\r\nimport insertWrapDetails from './_insertWrapDetails.js';\r\nimport setToString from './_setToString.js';\r\nimport updateWrapDetails from './_updateWrapDetails.js';\r\n\r\n/**\r\n * Sets the `toString` method of `wrapper` to mimic the source of `reference`\r\n * with wrapper details in a comment at the top of the source body.\r\n *\r\n * @private\r\n * @param {Function} wrapper The function to modify.\r\n * @param {Function} reference The reference function.\r\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\r\n * @returns {Function} Returns `wrapper`.\r\n */\r\nfunction setWrapToString(wrapper, reference, bitmask) {\r\n  var source = (reference + '');\r\n  return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\r\n}\r\n\r\nexport default setWrapToString;\r\n"]},"metadata":{},"sourceType":"module"}