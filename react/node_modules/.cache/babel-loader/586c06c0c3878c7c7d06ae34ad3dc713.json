{"ast":null,"code":"import React from\"react\";// nodejs library to set properties for components\n// nodejs library that concatenates classes\nimport classNames from\"classnames\";// @material-ui/core components\nimport{makeStyles}from\"@material-ui/core/styles\";import FormControl from\"@material-ui/core/FormControl\";import InputLabel from\"@material-ui/core/InputLabel\";import Input from\"@material-ui/core/Input\";import styles from\"./../../../assets/jss/components/customInputStyle.js\";const useStyles=makeStyles(styles);export default function CustomInput(props){const classes=useStyles();const formControlProps=props.formControlProps,labelText=props.labelText,id=props.id,labelProps=props.labelProps,inputProps=props.inputProps,error=props.error,white=props.white,inputRootCustomClasses=props.inputRootCustomClasses,success=props.success;const labelClasses=classNames({[\" \"+classes.labelRootError]:error,[\" \"+classes.labelRootSuccess]:success&&!error});const underlineClasses=classNames({[classes.underlineError]:error,[classes.underlineSuccess]:success&&!error,[classes.underline]:true,[classes.whiteUnderline]:white});const marginTop=classNames({[inputRootCustomClasses]:inputRootCustomClasses!==undefined});const inputClasses=classNames({[classes.input]:true,[classes.whiteInput]:white});var formControlClasses;if(formControlProps!==undefined){formControlClasses=classNames(formControlProps.className,classes.formControl);}else{formControlClasses=classes.formControl;}return/*#__PURE__*/React.createElement(FormControl,Object.assign({},formControlProps,{className:formControlClasses}),labelText!==undefined?/*#__PURE__*/React.createElement(InputLabel,Object.assign({className:classes.labelRoot+\" \"+labelClasses,htmlFor:id},labelProps),labelText):null,/*#__PURE__*/React.createElement(Input,Object.assign({classes:{input:inputClasses,root:marginTop,disabled:classes.disabled,underline:underlineClasses},id:id},inputProps)));}","map":{"version":3,"sources":["/Users/Kevin/Desktop/Platform/react/src/views/Component-tools/CustomInput/CustomInput.js"],"names":["React","classNames","makeStyles","FormControl","InputLabel","Input","styles","useStyles","CustomInput","props","classes","formControlProps","labelText","id","labelProps","inputProps","error","white","inputRootCustomClasses","success","labelClasses","labelRootError","labelRootSuccess","underlineClasses","underlineError","underlineSuccess","underline","whiteUnderline","marginTop","undefined","inputClasses","input","whiteInput","formControlClasses","className","formControl","labelRoot","root","disabled"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA;AAEA;AACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA;AACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,sDAAnB,CAEA,KAAMC,CAAAA,SAAS,CAAGL,UAAU,CAACI,MAAD,CAA5B,CAEA,cAAe,SAASE,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,CACzC,KAAMC,CAAAA,OAAO,CAAGH,SAAS,EAAzB,CADyC,KAGvCI,CAAAA,gBAHuC,CAYrCF,KAZqC,CAGvCE,gBAHuC,CAIvCC,SAJuC,CAYrCH,KAZqC,CAIvCG,SAJuC,CAKvCC,EALuC,CAYrCJ,KAZqC,CAKvCI,EALuC,CAMvCC,UANuC,CAYrCL,KAZqC,CAMvCK,UANuC,CAOvCC,UAPuC,CAYrCN,KAZqC,CAOvCM,UAPuC,CAQvCC,KARuC,CAYrCP,KAZqC,CAQvCO,KARuC,CASvCC,KATuC,CAYrCR,KAZqC,CASvCQ,KATuC,CAUvCC,sBAVuC,CAYrCT,KAZqC,CAUvCS,sBAVuC,CAWvCC,OAXuC,CAYrCV,KAZqC,CAWvCU,OAXuC,CAczC,KAAMC,CAAAA,YAAY,CAAGnB,UAAU,CAAC,CAC9B,CAAC,IAAMS,OAAO,CAACW,cAAf,EAAgCL,KADF,CAE9B,CAAC,IAAMN,OAAO,CAACY,gBAAf,EAAkCH,OAAO,EAAI,CAACH,KAFhB,CAAD,CAA/B,CAIA,KAAMO,CAAAA,gBAAgB,CAAGtB,UAAU,CAAC,CAClC,CAACS,OAAO,CAACc,cAAT,EAA0BR,KADQ,CAElC,CAACN,OAAO,CAACe,gBAAT,EAA4BN,OAAO,EAAI,CAACH,KAFN,CAGlC,CAACN,OAAO,CAACgB,SAAT,EAAqB,IAHa,CAIlC,CAAChB,OAAO,CAACiB,cAAT,EAA0BV,KAJQ,CAAD,CAAnC,CAMA,KAAMW,CAAAA,SAAS,CAAG3B,UAAU,CAAC,CAC3B,CAACiB,sBAAD,EAA0BA,sBAAsB,GAAKW,SAD1B,CAAD,CAA5B,CAGA,KAAMC,CAAAA,YAAY,CAAG7B,UAAU,CAAC,CAC9B,CAACS,OAAO,CAACqB,KAAT,EAAiB,IADa,CAE9B,CAACrB,OAAO,CAACsB,UAAT,EAAsBf,KAFQ,CAAD,CAA/B,CAIA,GAAIgB,CAAAA,kBAAJ,CACA,GAAItB,gBAAgB,GAAKkB,SAAzB,CAAoC,CAClCI,kBAAkB,CAAGhC,UAAU,CAC7BU,gBAAgB,CAACuB,SADY,CAE7BxB,OAAO,CAACyB,WAFqB,CAA/B,CAID,CALD,IAKO,CACLF,kBAAkB,CAAGvB,OAAO,CAACyB,WAA7B,CACD,CACD,mBACE,oBAAC,WAAD,kBAAiBxB,gBAAjB,EAAmC,SAAS,CAAEsB,kBAA9C,GACGrB,SAAS,GAAKiB,SAAd,cACC,oBAAC,UAAD,gBACE,SAAS,CAAEnB,OAAO,CAAC0B,SAAR,CAAoB,GAApB,CAA0BhB,YADvC,CAEE,OAAO,CAAEP,EAFX,EAGMC,UAHN,EAKGF,SALH,CADD,CAQG,IATN,cAUE,oBAAC,KAAD,gBACE,OAAO,CAAE,CACPmB,KAAK,CAAED,YADA,CAEPO,IAAI,CAAET,SAFC,CAGPU,QAAQ,CAAE5B,OAAO,CAAC4B,QAHX,CAIPZ,SAAS,CAAEH,gBAJJ,CADX,CAOE,EAAE,CAAEV,EAPN,EAQME,UARN,EAVF,CADF,CAuBD","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\n\nimport styles from \"./../../../assets/jss/components/customInputStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomInput(props) {\n  const classes = useStyles();\n  const {\n    formControlProps,\n    labelText,\n    id,\n    labelProps,\n    inputProps,\n    error,\n    white,\n    inputRootCustomClasses,\n    success\n  } = props;\n\n  const labelClasses = classNames({\n    [\" \" + classes.labelRootError]: error,\n    [\" \" + classes.labelRootSuccess]: success && !error\n  });\n  const underlineClasses = classNames({\n    [classes.underlineError]: error,\n    [classes.underlineSuccess]: success && !error,\n    [classes.underline]: true,\n    [classes.whiteUnderline]: white\n  });\n  const marginTop = classNames({\n    [inputRootCustomClasses]: inputRootCustomClasses !== undefined\n  });\n  const inputClasses = classNames({\n    [classes.input]: true,\n    [classes.whiteInput]: white\n  });\n  var formControlClasses;\n  if (formControlProps !== undefined) {\n    formControlClasses = classNames(\n      formControlProps.className,\n      classes.formControl\n    );\n  } else {\n    formControlClasses = classes.formControl;\n  }\n  return (\n    <FormControl {...formControlProps} className={formControlClasses}>\n      {labelText !== undefined ? (\n        <InputLabel\n          className={classes.labelRoot + \" \" + labelClasses}\n          htmlFor={id}\n          {...labelProps}\n        >\n          {labelText}\n        </InputLabel>\n      ) : null}\n      <Input\n        classes={{\n          input: inputClasses,\n          root: marginTop,\n          disabled: classes.disabled,\n          underline: underlineClasses\n        }}\n        id={id}\n        {...inputProps}\n      />\n    </FormControl>\n  );\n}\n\nCustomInput.propTypes = {\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  inputRootCustomClasses: PropTypes.string,\n  error: PropTypes.bool,\n  success: PropTypes.bool,\n  white: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}