{"ast":null,"code":"import composeArgs from './_composeArgs.js';\nimport composeArgsRight from './_composeArgsRight.js';\nimport countHolders from './_countHolders.js';\nimport createCtor from './_createCtor.js';\nimport createRecurry from './_createRecurry.js';\nimport getHolder from './_getHolder.js';\nimport reorder from './_reorder.js';\nimport replaceHolders from './_replaceHolders.js';\nimport root from './_root.js';\n/** Used to compose bitmasks for function metadata. */\n\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_ARY_FLAG = 128,\n    WRAP_FLIP_FLAG = 512;\n/**\r\n * Creates a function that wraps `func` to invoke it with optional `this`\r\n * binding of `thisArg`, partial application, and currying.\r\n *\r\n * @private\r\n * @param {Function|string} func The function or method name to wrap.\r\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\r\n * @param {*} [thisArg] The `this` binding of `func`.\r\n * @param {Array} [partials] The arguments to prepend to those provided to\r\n *  the new function.\r\n * @param {Array} [holders] The `partials` placeholder indexes.\r\n * @param {Array} [partialsRight] The arguments to append to those provided\r\n *  to the new function.\r\n * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\r\n * @param {Array} [argPos] The argument positions of the new function.\r\n * @param {number} [ary] The arity cap of `func`.\r\n * @param {number} [arity] The arity of `func`.\r\n * @returns {Function} Returns the new wrapped function.\r\n */\n\nfunction createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n  var isAry = bitmask & WRAP_ARY_FLAG,\n      isBind = bitmask & WRAP_BIND_FLAG,\n      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n      isFlip = bitmask & WRAP_FLIP_FLAG,\n      Ctor = isBindKey ? undefined : createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length;\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n\n    if (isCurried) {\n      var placeholder = getHolder(wrapper),\n          holdersCount = countHolders(args, placeholder);\n    }\n\n    if (partials) {\n      args = composeArgs(args, partials, holders, isCurried);\n    }\n\n    if (partialsRight) {\n      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n    }\n\n    length -= holdersCount;\n\n    if (isCurried && length < arity) {\n      var newHolders = replaceHolders(args, placeholder);\n      return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary, arity - length);\n    }\n\n    var thisBinding = isBind ? thisArg : this,\n        fn = isBindKey ? thisBinding[func] : func;\n    length = args.length;\n\n    if (argPos) {\n      args = reorder(args, argPos);\n    } else if (isFlip && length > 1) {\n      args.reverse();\n    }\n\n    if (isAry && ary < length) {\n      args.length = ary;\n    }\n\n    if (this && this !== root && this instanceof wrapper) {\n      fn = Ctor || createCtor(fn);\n    }\n\n    return fn.apply(thisBinding, args);\n  }\n\n  return wrapper;\n}\n\nexport default createHybrid;","map":{"version":3,"sources":["C:/Users/xuebi/Desktop/EasyJobs/react/node_modules/lodash-es/_createHybrid.js"],"names":["composeArgs","composeArgsRight","countHolders","createCtor","createRecurry","getHolder","reorder","replaceHolders","root","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_FLIP_FLAG","createHybrid","func","bitmask","thisArg","partials","holders","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isCurried","isFlip","Ctor","undefined","wrapper","length","arguments","args","Array","index","placeholder","holdersCount","newHolders","thisBinding","fn","reverse","apply"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;AACA,OAAOC,gBAAP,MAA6B,wBAA7B;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAEA;;AACA,IAAIC,cAAc,GAAG,CAArB;AAAA,IACIC,kBAAkB,GAAG,CADzB;AAAA,IAEIC,eAAe,GAAG,CAFtB;AAAA,IAGIC,qBAAqB,GAAG,EAH5B;AAAA,IAIIC,aAAa,GAAG,GAJpB;AAAA,IAKIC,cAAc,GAAG,GALrB;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,OAA5B,EAAqCC,OAArC,EAA8CC,QAA9C,EAAwDC,OAAxD,EAAiEC,aAAjE,EAAgFC,YAAhF,EAA8FC,MAA9F,EAAsGC,GAAtG,EAA2GC,KAA3G,EAAkH;AAChH,MAAIC,KAAK,GAAGT,OAAO,GAAGJ,aAAtB;AAAA,MACIc,MAAM,GAAGV,OAAO,GAAGR,cADvB;AAAA,MAEImB,SAAS,GAAGX,OAAO,GAAGP,kBAF1B;AAAA,MAGImB,SAAS,GAAGZ,OAAO,IAAIN,eAAe,GAAGC,qBAAtB,CAHvB;AAAA,MAIIkB,MAAM,GAAGb,OAAO,GAAGH,cAJvB;AAAA,MAKIiB,IAAI,GAAGH,SAAS,GAAGI,SAAH,GAAe7B,UAAU,CAACa,IAAD,CAL7C;;AAOA,WAASiB,OAAT,GAAmB;AACjB,QAAIC,MAAM,GAAGC,SAAS,CAACD,MAAvB;AAAA,QACIE,IAAI,GAAGC,KAAK,CAACH,MAAD,CADhB;AAAA,QAEII,KAAK,GAAGJ,MAFZ;;AAIA,WAAOI,KAAK,EAAZ,EAAgB;AACdF,MAAAA,IAAI,CAACE,KAAD,CAAJ,GAAcH,SAAS,CAACG,KAAD,CAAvB;AACD;;AACD,QAAIT,SAAJ,EAAe;AACb,UAAIU,WAAW,GAAGlC,SAAS,CAAC4B,OAAD,CAA3B;AAAA,UACIO,YAAY,GAAGtC,YAAY,CAACkC,IAAD,EAAOG,WAAP,CAD/B;AAED;;AACD,QAAIpB,QAAJ,EAAc;AACZiB,MAAAA,IAAI,GAAGpC,WAAW,CAACoC,IAAD,EAAOjB,QAAP,EAAiBC,OAAjB,EAA0BS,SAA1B,CAAlB;AACD;;AACD,QAAIR,aAAJ,EAAmB;AACjBe,MAAAA,IAAI,GAAGnC,gBAAgB,CAACmC,IAAD,EAAOf,aAAP,EAAsBC,YAAtB,EAAoCO,SAApC,CAAvB;AACD;;AACDK,IAAAA,MAAM,IAAIM,YAAV;;AACA,QAAIX,SAAS,IAAIK,MAAM,GAAGT,KAA1B,EAAiC;AAC/B,UAAIgB,UAAU,GAAGlC,cAAc,CAAC6B,IAAD,EAAOG,WAAP,CAA/B;AACA,aAAOnC,aAAa,CAClBY,IADkB,EACZC,OADY,EACHF,YADG,EACWkB,OAAO,CAACM,WADnB,EACgCrB,OADhC,EAElBkB,IAFkB,EAEZK,UAFY,EAEAlB,MAFA,EAEQC,GAFR,EAEaC,KAAK,GAAGS,MAFrB,CAApB;AAID;;AACD,QAAIQ,WAAW,GAAGf,MAAM,GAAGT,OAAH,GAAa,IAArC;AAAA,QACIyB,EAAE,GAAGf,SAAS,GAAGc,WAAW,CAAC1B,IAAD,CAAd,GAAuBA,IADzC;AAGAkB,IAAAA,MAAM,GAAGE,IAAI,CAACF,MAAd;;AACA,QAAIX,MAAJ,EAAY;AACVa,MAAAA,IAAI,GAAG9B,OAAO,CAAC8B,IAAD,EAAOb,MAAP,CAAd;AACD,KAFD,MAEO,IAAIO,MAAM,IAAII,MAAM,GAAG,CAAvB,EAA0B;AAC/BE,MAAAA,IAAI,CAACQ,OAAL;AACD;;AACD,QAAIlB,KAAK,IAAIF,GAAG,GAAGU,MAAnB,EAA2B;AACzBE,MAAAA,IAAI,CAACF,MAAL,GAAcV,GAAd;AACD;;AACD,QAAI,QAAQ,SAAShB,IAAjB,IAAyB,gBAAgByB,OAA7C,EAAsD;AACpDU,MAAAA,EAAE,GAAGZ,IAAI,IAAI5B,UAAU,CAACwC,EAAD,CAAvB;AACD;;AACD,WAAOA,EAAE,CAACE,KAAH,CAASH,WAAT,EAAsBN,IAAtB,CAAP;AACD;;AACD,SAAOH,OAAP;AACD;;AAED,eAAelB,YAAf","sourcesContent":["import composeArgs from './_composeArgs.js';\r\nimport composeArgsRight from './_composeArgsRight.js';\r\nimport countHolders from './_countHolders.js';\r\nimport createCtor from './_createCtor.js';\r\nimport createRecurry from './_createRecurry.js';\r\nimport getHolder from './_getHolder.js';\r\nimport reorder from './_reorder.js';\r\nimport replaceHolders from './_replaceHolders.js';\r\nimport root from './_root.js';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_BIND_FLAG = 1,\r\n    WRAP_BIND_KEY_FLAG = 2,\r\n    WRAP_CURRY_FLAG = 8,\r\n    WRAP_CURRY_RIGHT_FLAG = 16,\r\n    WRAP_ARY_FLAG = 128,\r\n    WRAP_FLIP_FLAG = 512;\r\n\r\n/**\r\n * Creates a function that wraps `func` to invoke it with optional `this`\r\n * binding of `thisArg`, partial application, and currying.\r\n *\r\n * @private\r\n * @param {Function|string} func The function or method name to wrap.\r\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\r\n * @param {*} [thisArg] The `this` binding of `func`.\r\n * @param {Array} [partials] The arguments to prepend to those provided to\r\n *  the new function.\r\n * @param {Array} [holders] The `partials` placeholder indexes.\r\n * @param {Array} [partialsRight] The arguments to append to those provided\r\n *  to the new function.\r\n * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\r\n * @param {Array} [argPos] The argument positions of the new function.\r\n * @param {number} [ary] The arity cap of `func`.\r\n * @param {number} [arity] The arity of `func`.\r\n * @returns {Function} Returns the new wrapped function.\r\n */\r\nfunction createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\r\n  var isAry = bitmask & WRAP_ARY_FLAG,\r\n      isBind = bitmask & WRAP_BIND_FLAG,\r\n      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\r\n      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\r\n      isFlip = bitmask & WRAP_FLIP_FLAG,\r\n      Ctor = isBindKey ? undefined : createCtor(func);\r\n\r\n  function wrapper() {\r\n    var length = arguments.length,\r\n        args = Array(length),\r\n        index = length;\r\n\r\n    while (index--) {\r\n      args[index] = arguments[index];\r\n    }\r\n    if (isCurried) {\r\n      var placeholder = getHolder(wrapper),\r\n          holdersCount = countHolders(args, placeholder);\r\n    }\r\n    if (partials) {\r\n      args = composeArgs(args, partials, holders, isCurried);\r\n    }\r\n    if (partialsRight) {\r\n      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\r\n    }\r\n    length -= holdersCount;\r\n    if (isCurried && length < arity) {\r\n      var newHolders = replaceHolders(args, placeholder);\r\n      return createRecurry(\r\n        func, bitmask, createHybrid, wrapper.placeholder, thisArg,\r\n        args, newHolders, argPos, ary, arity - length\r\n      );\r\n    }\r\n    var thisBinding = isBind ? thisArg : this,\r\n        fn = isBindKey ? thisBinding[func] : func;\r\n\r\n    length = args.length;\r\n    if (argPos) {\r\n      args = reorder(args, argPos);\r\n    } else if (isFlip && length > 1) {\r\n      args.reverse();\r\n    }\r\n    if (isAry && ary < length) {\r\n      args.length = ary;\r\n    }\r\n    if (this && this !== root && this instanceof wrapper) {\r\n      fn = Ctor || createCtor(fn);\r\n    }\r\n    return fn.apply(thisBinding, args);\r\n  }\r\n  return wrapper;\r\n}\r\n\r\nexport default createHybrid;\r\n"]},"metadata":{},"sourceType":"module"}