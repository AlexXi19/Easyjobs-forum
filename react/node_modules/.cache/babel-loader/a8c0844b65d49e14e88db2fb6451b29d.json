{"ast":null,"code":"import _isEqual from \"lodash-es/isEqual\";\nimport _has from \"lodash-es/has\";\nimport _transform from \"lodash-es/transform\";\n/**\r\n * Naive and inefficient object difference, intended for development / debugging use only.\r\n * Deleted keys are shown as [DELETED].\r\n * @param {{}} source The source object\r\n * @param {{}} target The target object.\r\n * @returns {{}} A new object containing new/modified/deleted keys.\r\n * @example\r\n * import { objectDiff } from 'src/lib'\r\n *\r\n * const a = { key: 'val', foo: 'bar' }\r\n * const b = { key: 'val', foo: 'baz' }\r\n *\r\n * objectDiff(a, b)\r\n * //=> { foo: 'baz' }\r\n */\n\nexport default (function (source, target) {\n  return _transform(source, function (res, val, key) {\n    // deleted keys\n    if (!_has(target, key)) res[key] = '[DELETED]'; // new keys / changed values\n    // Note, we tolerate isEqual here as this is a dev only utility and not included in production code\n    else if (!_isEqual(val, target[key])) res[key] = target[key];\n  }, {});\n});","map":{"version":3,"sources":["C:/Users/xuebi/Desktop/EasyJobs/react/node_modules/semantic-ui-react/dist/es/lib/objectDiff.js"],"names":["_isEqual","_has","_transform","source","target","res","val","key"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,mBAArB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,gBAAgB,UAAUC,MAAV,EAAkBC,MAAlB,EAA0B;AACxC,SAAOF,UAAU,CAACC,MAAD,EAAS,UAAUE,GAAV,EAAeC,GAAf,EAAoBC,GAApB,EAAyB;AACjD;AACA,QAAI,CAACN,IAAI,CAACG,MAAD,EAASG,GAAT,CAAT,EAAwBF,GAAG,CAACE,GAAD,CAAH,GAAW,WAAX,CAAxB,CAAgD;AAChD;AADA,SAEK,IAAI,CAACP,QAAQ,CAACM,GAAD,EAAMF,MAAM,CAACG,GAAD,CAAZ,CAAb,EAAiCF,GAAG,CAACE,GAAD,CAAH,GAAWH,MAAM,CAACG,GAAD,CAAjB;AACvC,GALgB,EAKd,EALc,CAAjB;AAMD,CAPD","sourcesContent":["import _isEqual from \"lodash-es/isEqual\";\r\nimport _has from \"lodash-es/has\";\r\nimport _transform from \"lodash-es/transform\";\r\n\r\n/**\r\n * Naive and inefficient object difference, intended for development / debugging use only.\r\n * Deleted keys are shown as [DELETED].\r\n * @param {{}} source The source object\r\n * @param {{}} target The target object.\r\n * @returns {{}} A new object containing new/modified/deleted keys.\r\n * @example\r\n * import { objectDiff } from 'src/lib'\r\n *\r\n * const a = { key: 'val', foo: 'bar' }\r\n * const b = { key: 'val', foo: 'baz' }\r\n *\r\n * objectDiff(a, b)\r\n * //=> { foo: 'baz' }\r\n */\r\nexport default (function (source, target) {\r\n  return _transform(source, function (res, val, key) {\r\n    // deleted keys\r\n    if (!_has(target, key)) res[key] = '[DELETED]'; // new keys / changed values\r\n    // Note, we tolerate isEqual here as this is a dev only utility and not included in production code\r\n    else if (!_isEqual(val, target[key])) res[key] = target[key];\r\n  }, {});\r\n});"]},"metadata":{},"sourceType":"module"}