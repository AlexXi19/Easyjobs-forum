{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"circular\"`. */\n    circular: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * Used in combination with `src` or `srcSet` to\r\n   * provide an alt attribute for the rendered `img` element.\r\n   */\n  alt: PropTypes.string,\n\n  /**\r\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\r\n   * This can be an element, or just a string.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: chainPropTypes(PropTypes.object, function (props) {\n    var classes = props.classes;\n\n    if (classes == null) {\n      return null;\n    }\n\n    if (classes.circle != null && // 2 classnames? one from withStyles the other must be custom\n    classes.circle.split(' ').length > 1) {\n      throw new Error(\"Material-UI: The `circle` class was deprecated. Use `circular` instead.\");\n    }\n\n    return null;\n  }),\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\r\n   * Attributes applied to the `img` element if the component is used to display an image.\r\n   * It can be used to listen for the loading error event.\r\n   */\n  imgProps: PropTypes.object,\n\n  /**\r\n   * The `sizes` attribute for the `img` element.\r\n   */\n  sizes: PropTypes.string,\n\n  /**\r\n   * The `src` attribute for the `img` element.\r\n   */\n  src: PropTypes.string,\n\n  /**\r\n   * The `srcSet` attribute for the `img` element.\r\n   * Use this attribute for responsive image display.\r\n   */\n  srcSet: PropTypes.string,\n\n  /**\r\n   * The shape of the avatar.\r\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['circle', 'circular', 'rounded', 'square']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'circle') {\n      throw new Error('Material-UI: `variant=\"circle\"` was deprecated. Use `variant=\"circular\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","map":{"version":3,"sources":["C:/Users/xuebi/Desktop/EasyJobs/react/node_modules/@material-ui/core/esm/Avatar/Avatar.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","chainPropTypes","withStyles","Person","styles","theme","root","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","colorDefault","color","palette","background","default","backgroundColor","type","grey","circle","circular","rounded","shape","square","img","textAlign","objectFit","textIndent","fallback","useLoaded","_ref","src","srcSet","_React$useState","useState","loaded","setLoaded","useEffect","undefined","active","image","Image","onload","onerror","Avatar","forwardRef","props","ref","alt","childrenProp","children","classes","className","_props$component","component","Component","imgProps","sizes","_props$variant","variant","other","hasImg","hasImgNotFailing","createElement","system","process","env","NODE_ENV","propTypes","string","node","object","split","length","Error","elementType","oneOf","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAO,IAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,KAAhB,EAAuB;AACzC,SAAO;AACL;AACAC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE,UADN;AAEJC,MAAAA,OAAO,EAAE,MAFL;AAGJC,MAAAA,UAAU,EAAE,QAHR;AAIJC,MAAAA,cAAc,EAAE,QAJZ;AAKJC,MAAAA,UAAU,EAAE,CALR;AAMJC,MAAAA,KAAK,EAAE,EANH;AAOJC,MAAAA,MAAM,EAAE,EAPJ;AAQJC,MAAAA,UAAU,EAAET,KAAK,CAACU,UAAN,CAAiBD,UARzB;AASJE,MAAAA,QAAQ,EAAEX,KAAK,CAACU,UAAN,CAAiBE,OAAjB,CAAyB,EAAzB,CATN;AAUJC,MAAAA,UAAU,EAAE,CAVR;AAWJC,MAAAA,YAAY,EAAE,KAXV;AAYJC,MAAAA,QAAQ,EAAE,QAZN;AAaJC,MAAAA,UAAU,EAAE;AAbR,KAFD;;AAkBL;AACAC,IAAAA,YAAY,EAAE;AACZC,MAAAA,KAAK,EAAElB,KAAK,CAACmB,OAAN,CAAcC,UAAd,CAAyBC,OADpB;AAEZC,MAAAA,eAAe,EAAEtB,KAAK,CAACmB,OAAN,CAAcI,IAAd,KAAuB,OAAvB,GAAiCvB,KAAK,CAACmB,OAAN,CAAcK,IAAd,CAAmB,GAAnB,CAAjC,GAA2DxB,KAAK,CAACmB,OAAN,CAAcK,IAAd,CAAmB,GAAnB;AAFhE,KAnBT;;AAwBL;AACAC,IAAAA,MAAM,EAAE,EAzBH;;AA2BL;AACAC,IAAAA,QAAQ,EAAE,EA5BL;;AA8BL;AACAC,IAAAA,OAAO,EAAE;AACPb,MAAAA,YAAY,EAAEd,KAAK,CAAC4B,KAAN,CAAYd;AADnB,KA/BJ;;AAmCL;AACAe,IAAAA,MAAM,EAAE;AACNf,MAAAA,YAAY,EAAE;AADR,KApCH;;AAwCL;AACAgB,IAAAA,GAAG,EAAE;AACHvB,MAAAA,KAAK,EAAE,MADJ;AAEHC,MAAAA,MAAM,EAAE,MAFL;AAGHuB,MAAAA,SAAS,EAAE,QAHR;AAIH;AACAC,MAAAA,SAAS,EAAE,OALR;AAMH;AACAd,MAAAA,KAAK,EAAE,aAPJ;AAQH;AACAe,MAAAA,UAAU,EAAE;AATT,KAzCA;;AAqDL;AACAC,IAAAA,QAAQ,EAAE;AACR3B,MAAAA,KAAK,EAAE,KADC;AAERC,MAAAA,MAAM,EAAE;AAFA;AAtDL,GAAP;AA2DD,CA5DM;;AA8DP,SAAS2B,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,MAAIC,GAAG,GAAGD,IAAI,CAACC,GAAf;AAAA,MACIC,MAAM,GAAGF,IAAI,CAACE,MADlB;;AAGA,MAAIC,eAAe,GAAG9C,KAAK,CAAC+C,QAAN,CAAe,KAAf,CAAtB;AAAA,MACIC,MAAM,GAAGF,eAAe,CAAC,CAAD,CAD5B;AAAA,MAEIG,SAAS,GAAGH,eAAe,CAAC,CAAD,CAF/B;;AAIA9C,EAAAA,KAAK,CAACkD,SAAN,CAAgB,YAAY;AAC1B,QAAI,CAACN,GAAD,IAAQ,CAACC,MAAb,EAAqB;AACnB,aAAOM,SAAP;AACD;;AAEDF,IAAAA,SAAS,CAAC,KAAD,CAAT;AACA,QAAIG,MAAM,GAAG,IAAb;AACA,QAAIC,KAAK,GAAG,IAAIC,KAAJ,EAAZ;AACAD,IAAAA,KAAK,CAACT,GAAN,GAAYA,GAAZ;AACAS,IAAAA,KAAK,CAACR,MAAN,GAAeA,MAAf;;AAEAQ,IAAAA,KAAK,CAACE,MAAN,GAAe,YAAY;AACzB,UAAI,CAACH,MAAL,EAAa;AACX;AACD;;AAEDH,MAAAA,SAAS,CAAC,QAAD,CAAT;AACD,KAND;;AAQAI,IAAAA,KAAK,CAACG,OAAN,GAAgB,YAAY;AAC1B,UAAI,CAACJ,MAAL,EAAa;AACX;AACD;;AAEDH,MAAAA,SAAS,CAAC,OAAD,CAAT;AACD,KAND;;AAQA,WAAO,YAAY;AACjBG,MAAAA,MAAM,GAAG,KAAT;AACD,KAFD;AAGD,GA9BD,EA8BG,CAACR,GAAD,EAAMC,MAAN,CA9BH;AA+BA,SAAOG,MAAP;AACD;;AAED,IAAIS,MAAM,GAAG,aAAazD,KAAK,CAAC0D,UAAN,CAAiB,SAASD,MAAT,CAAgBE,KAAhB,EAAuBC,GAAvB,EAA4B;AACrE,MAAIC,GAAG,GAAGF,KAAK,CAACE,GAAhB;AAAA,MACIC,YAAY,GAAGH,KAAK,CAACI,QADzB;AAAA,MAEIC,OAAO,GAAGL,KAAK,CAACK,OAFpB;AAAA,MAGIC,SAAS,GAAGN,KAAK,CAACM,SAHtB;AAAA,MAIIC,gBAAgB,GAAGP,KAAK,CAACQ,SAJ7B;AAAA,MAKIC,SAAS,GAAGF,gBAAgB,KAAK,KAAK,CAA1B,GAA8B,KAA9B,GAAsCA,gBALtD;AAAA,MAMIG,QAAQ,GAAGV,KAAK,CAACU,QANrB;AAAA,MAOIC,KAAK,GAAGX,KAAK,CAACW,KAPlB;AAAA,MAQI1B,GAAG,GAAGe,KAAK,CAACf,GARhB;AAAA,MASIC,MAAM,GAAGc,KAAK,CAACd,MATnB;AAAA,MAUI0B,cAAc,GAAGZ,KAAK,CAACa,OAV3B;AAAA,MAWIA,OAAO,GAAGD,cAAc,KAAK,KAAK,CAAxB,GAA4B,QAA5B,GAAuCA,cAXrD;AAAA,MAYIE,KAAK,GAAG1E,wBAAwB,CAAC4D,KAAD,EAAQ,CAAC,KAAD,EAAQ,UAAR,EAAoB,SAApB,EAA+B,WAA/B,EAA4C,WAA5C,EAAyD,UAAzD,EAAqE,OAArE,EAA8E,KAA9E,EAAqF,QAArF,EAA+F,SAA/F,CAAR,CAZpC;;AAcA,MAAII,QAAQ,GAAG,IAAf,CAfqE,CAehD;;AAErB,MAAIf,MAAM,GAAGN,SAAS,CAAC;AACrBE,IAAAA,GAAG,EAAEA,GADgB;AAErBC,IAAAA,MAAM,EAAEA;AAFa,GAAD,CAAtB;AAIA,MAAI6B,MAAM,GAAG9B,GAAG,IAAIC,MAApB;AACA,MAAI8B,gBAAgB,GAAGD,MAAM,IAAI1B,MAAM,KAAK,OAA5C;;AAEA,MAAI2B,gBAAJ,EAAsB;AACpBZ,IAAAA,QAAQ,GAAG,aAAa/D,KAAK,CAAC4E,aAAN,CAAoB,KAApB,EAA2B9E,QAAQ,CAAC;AAC1D+D,MAAAA,GAAG,EAAEA,GADqD;AAE1DjB,MAAAA,GAAG,EAAEA,GAFqD;AAG1DC,MAAAA,MAAM,EAAEA,MAHkD;AAI1DyB,MAAAA,KAAK,EAAEA,KAJmD;AAK1DL,MAAAA,SAAS,EAAED,OAAO,CAAC3B;AALuC,KAAD,EAMxDgC,QANwD,CAAnC,CAAxB;AAOD,GARD,MAQO,IAAIP,YAAY,IAAI,IAApB,EAA0B;AAC/BC,IAAAA,QAAQ,GAAGD,YAAX;AACD,GAFM,MAEA,IAAIY,MAAM,IAAIb,GAAd,EAAmB;AACxBE,IAAAA,QAAQ,GAAGF,GAAG,CAAC,CAAD,CAAd;AACD,GAFM,MAEA;AACLE,IAAAA,QAAQ,GAAG,aAAa/D,KAAK,CAAC4E,aAAN,CAAoBvE,MAApB,EAA4B;AAClD4D,MAAAA,SAAS,EAAED,OAAO,CAACvB;AAD+B,KAA5B,CAAxB;AAGD;;AAED,SAAO,aAAazC,KAAK,CAAC4E,aAAN,CAAoBR,SAApB,EAA+BtE,QAAQ,CAAC;AAC1DmE,IAAAA,SAAS,EAAE/D,IAAI,CAAC8D,OAAO,CAACxD,IAAT,EAAewD,OAAO,CAACa,MAAvB,EAA+Bb,OAAO,CAACQ,OAAD,CAAtC,EAAiDP,SAAjD,EAA4D,CAACU,gBAAD,IAAqBX,OAAO,CAACxC,YAAzF,CAD2C;AAE1DoC,IAAAA,GAAG,EAAEA;AAFqD,GAAD,EAGxDa,KAHwD,CAAvC,EAGTV,QAHS,CAApB;AAID,CA9CyB,CAA1B;AA+CAe,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCvB,MAAM,CAACwB,SAAP,GAAmB;AACzD;AACA;AACA;AACA;;AAEA;AACF;AACA;AACA;AACEpB,EAAAA,GAAG,EAAE5D,SAAS,CAACiF,MAV0C;;AAYzD;AACF;AACA;AACA;AACEnB,EAAAA,QAAQ,EAAE9D,SAAS,CAACkF,IAhBqC;;AAkBzD;AACF;AACA;AACA;AACEnB,EAAAA,OAAO,EAAE7D,cAAc,CAACF,SAAS,CAACmF,MAAX,EAAmB,UAAUzB,KAAV,EAAiB;AACzD,QAAIK,OAAO,GAAGL,KAAK,CAACK,OAApB;;AAEA,QAAIA,OAAO,IAAI,IAAf,EAAqB;AACnB,aAAO,IAAP;AACD;;AAED,QAAIA,OAAO,CAAChC,MAAR,IAAkB,IAAlB,IAA0B;AAC9BgC,IAAAA,OAAO,CAAChC,MAAR,CAAeqD,KAAf,CAAqB,GAArB,EAA0BC,MAA1B,GAAmC,CADnC,EACsC;AACpC,YAAM,IAAIC,KAAJ,CAAU,yEAAV,CAAN;AACD;;AAED,WAAO,IAAP;AACD,GAbsB,CAtBkC;;AAqCzD;AACF;AACA;AACEtB,EAAAA,SAAS,EAAEhE,SAAS,CAACiF,MAxCoC;;AA0CzD;AACF;AACA;AACA;AACEf,EAAAA,SAAS,EAAElE;AACX;AADoB,GAEnBuF,WAhDwD;;AAkDzD;AACF;AACA;AACA;AACEnB,EAAAA,QAAQ,EAAEpE,SAAS,CAACmF,MAtDqC;;AAwDzD;AACF;AACA;AACEd,EAAAA,KAAK,EAAErE,SAAS,CAACiF,MA3DwC;;AA6DzD;AACF;AACA;AACEtC,EAAAA,GAAG,EAAE3C,SAAS,CAACiF,MAhE0C;;AAkEzD;AACF;AACA;AACA;AACErC,EAAAA,MAAM,EAAE5C,SAAS,CAACiF,MAtEuC;;AAwEzD;AACF;AACA;AACEV,EAAAA,OAAO,EAAErE,cAAc,CAACF,SAAS,CAACwF,KAAV,CAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,SAAvB,EAAkC,QAAlC,CAAhB,CAAD,EAA+D,UAAU9B,KAAV,EAAiB;AACrG,QAAIa,OAAO,GAAGb,KAAK,CAACa,OAApB;;AAEA,QAAIA,OAAO,KAAK,QAAhB,EAA0B;AACxB,YAAM,IAAIe,KAAJ,CAAU,mFAAV,CAAN;AACD;;AAED,WAAO,IAAP;AACD,GARsB;AA3EkC,CAA3D,GAoFI,KAAK,CApFT;AAqFA,eAAenF,UAAU,CAACE,MAAD,EAAS;AAChCoF,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZjC,MAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { chainPropTypes } from '@material-ui/utils';\r\nimport withStyles from '../styles/withStyles';\r\nimport Person from '../internal/svg-icons/Person';\r\nexport var styles = function styles(theme) {\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      position: 'relative',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      flexShrink: 0,\r\n      width: 40,\r\n      height: 40,\r\n      fontFamily: theme.typography.fontFamily,\r\n      fontSize: theme.typography.pxToRem(20),\r\n      lineHeight: 1,\r\n      borderRadius: '50%',\r\n      overflow: 'hidden',\r\n      userSelect: 'none'\r\n    },\r\n\r\n    /* Styles applied to the root element if not `src` or `srcSet`. */\r\n    colorDefault: {\r\n      color: theme.palette.background.default,\r\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\r\n    },\r\n\r\n    /* Styles applied to the root element if `variant=\"circle\"`. */\r\n    circle: {},\r\n\r\n    /* Styles applied to the root element if `variant=\"circular\"`. */\r\n    circular: {},\r\n\r\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\r\n    rounded: {\r\n      borderRadius: theme.shape.borderRadius\r\n    },\r\n\r\n    /* Styles applied to the root element if `variant=\"square\"`. */\r\n    square: {\r\n      borderRadius: 0\r\n    },\r\n\r\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\r\n    img: {\r\n      width: '100%',\r\n      height: '100%',\r\n      textAlign: 'center',\r\n      // Handle non-square image. The property isn't supported by IE 11.\r\n      objectFit: 'cover',\r\n      // Hide alt text.\r\n      color: 'transparent',\r\n      // Hide the image broken icon, only works on Chrome.\r\n      textIndent: 10000\r\n    },\r\n\r\n    /* Styles applied to the fallback icon */\r\n    fallback: {\r\n      width: '75%',\r\n      height: '75%'\r\n    }\r\n  };\r\n};\r\n\r\nfunction useLoaded(_ref) {\r\n  var src = _ref.src,\r\n      srcSet = _ref.srcSet;\r\n\r\n  var _React$useState = React.useState(false),\r\n      loaded = _React$useState[0],\r\n      setLoaded = _React$useState[1];\r\n\r\n  React.useEffect(function () {\r\n    if (!src && !srcSet) {\r\n      return undefined;\r\n    }\r\n\r\n    setLoaded(false);\r\n    var active = true;\r\n    var image = new Image();\r\n    image.src = src;\r\n    image.srcSet = srcSet;\r\n\r\n    image.onload = function () {\r\n      if (!active) {\r\n        return;\r\n      }\r\n\r\n      setLoaded('loaded');\r\n    };\r\n\r\n    image.onerror = function () {\r\n      if (!active) {\r\n        return;\r\n      }\r\n\r\n      setLoaded('error');\r\n    };\r\n\r\n    return function () {\r\n      active = false;\r\n    };\r\n  }, [src, srcSet]);\r\n  return loaded;\r\n}\r\n\r\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\r\n  var alt = props.alt,\r\n      childrenProp = props.children,\r\n      classes = props.classes,\r\n      className = props.className,\r\n      _props$component = props.component,\r\n      Component = _props$component === void 0 ? 'div' : _props$component,\r\n      imgProps = props.imgProps,\r\n      sizes = props.sizes,\r\n      src = props.src,\r\n      srcSet = props.srcSet,\r\n      _props$variant = props.variant,\r\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\r\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\r\n\r\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\r\n\r\n  var loaded = useLoaded({\r\n    src: src,\r\n    srcSet: srcSet\r\n  });\r\n  var hasImg = src || srcSet;\r\n  var hasImgNotFailing = hasImg && loaded !== 'error';\r\n\r\n  if (hasImgNotFailing) {\r\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\r\n      alt: alt,\r\n      src: src,\r\n      srcSet: srcSet,\r\n      sizes: sizes,\r\n      className: classes.img\r\n    }, imgProps));\r\n  } else if (childrenProp != null) {\r\n    children = childrenProp;\r\n  } else if (hasImg && alt) {\r\n    children = alt[0];\r\n  } else {\r\n    children = /*#__PURE__*/React.createElement(Person, {\r\n      className: classes.fallback\r\n    });\r\n  }\r\n\r\n  return /*#__PURE__*/React.createElement(Component, _extends({\r\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\r\n    ref: ref\r\n  }, other), children);\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * Used in combination with `src` or `srcSet` to\r\n   * provide an alt attribute for the rendered `img` element.\r\n   */\r\n  alt: PropTypes.string,\r\n\r\n  /**\r\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\r\n   * This can be an element, or just a string.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: chainPropTypes(PropTypes.object, function (props) {\r\n    var classes = props.classes;\r\n\r\n    if (classes == null) {\r\n      return null;\r\n    }\r\n\r\n    if (classes.circle != null && // 2 classnames? one from withStyles the other must be custom\r\n    classes.circle.split(' ').length > 1) {\r\n      throw new Error(\"Material-UI: The `circle` class was deprecated. Use `circular` instead.\");\r\n    }\r\n\r\n    return null;\r\n  }),\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .elementType,\r\n\r\n  /**\r\n   * Attributes applied to the `img` element if the component is used to display an image.\r\n   * It can be used to listen for the loading error event.\r\n   */\r\n  imgProps: PropTypes.object,\r\n\r\n  /**\r\n   * The `sizes` attribute for the `img` element.\r\n   */\r\n  sizes: PropTypes.string,\r\n\r\n  /**\r\n   * The `src` attribute for the `img` element.\r\n   */\r\n  src: PropTypes.string,\r\n\r\n  /**\r\n   * The `srcSet` attribute for the `img` element.\r\n   * Use this attribute for responsive image display.\r\n   */\r\n  srcSet: PropTypes.string,\r\n\r\n  /**\r\n   * The shape of the avatar.\r\n   */\r\n  variant: chainPropTypes(PropTypes.oneOf(['circle', 'circular', 'rounded', 'square']), function (props) {\r\n    var variant = props.variant;\r\n\r\n    if (variant === 'circle') {\r\n      throw new Error('Material-UI: `variant=\"circle\"` was deprecated. Use `variant=\"circular\"` instead.');\r\n    }\r\n\r\n    return null;\r\n  })\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiAvatar'\r\n})(Avatar);"]},"metadata":{},"sourceType":"module"}