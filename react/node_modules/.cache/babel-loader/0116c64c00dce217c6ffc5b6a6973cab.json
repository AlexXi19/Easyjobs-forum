{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\r\n * A modal can contain a description with one or more paragraphs.\r\n */\n\nfunction ModalDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('description', className);\n  var rest = getUnhandledProps(ModalDescription, props);\n  var ElementType = getElementType(ModalDescription, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nModalDescription.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nModalDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default ModalDescription;","map":{"version":3,"sources":["C:/Users/xuebi/Desktop/EasyJobs/react/node_modules/semantic-ui-react/dist/es/modules/Modal/ModalDescription.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","ModalDescription","props","children","className","content","classes","rest","ElementType","createElement","isNil","handledProps","propTypes","process","env","NODE_ENV","as","elementType","node","string","contentShorthand"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,cAAzC,EAAyDC,iBAAzD,QAAkF,WAAlF;AACA;AACA;AACA;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/B,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;AAAA,MAEIC,OAAO,GAAGH,KAAK,CAACG,OAFpB;AAGA,MAAIC,OAAO,GAAGZ,EAAE,CAAC,aAAD,EAAgBU,SAAhB,CAAhB;AACA,MAAIG,IAAI,GAAGP,iBAAiB,CAACC,gBAAD,EAAmBC,KAAnB,CAA5B;AACA,MAAIM,WAAW,GAAGT,cAAc,CAACE,gBAAD,EAAmBC,KAAnB,CAAhC;AACA,SAAO,aAAaN,KAAK,CAACa,aAAN,CAAoBD,WAApB,EAAiCf,QAAQ,CAAC,EAAD,EAAKc,IAAL,EAAW;AACtEH,IAAAA,SAAS,EAAEE;AAD2D,GAAX,CAAzC,EAEhBT,aAAa,CAACa,KAAd,CAAoBP,QAApB,IAAgCE,OAAhC,GAA0CF,QAF1B,CAApB;AAGD;;AAEDF,gBAAgB,CAACU,YAAjB,GAAgC,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,SAAhC,CAAhC;AACAV,gBAAgB,CAACW,SAAjB,GAA6BC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACnE;AACAC,EAAAA,EAAE,EAAErB,SAAS,CAACsB,WAFqD;;AAInE;AACAd,EAAAA,QAAQ,EAAER,SAAS,CAACuB,IAL+C;;AAOnE;AACAd,EAAAA,SAAS,EAAET,SAAS,CAACwB,MAR8C;;AAUnE;AACAd,EAAAA,OAAO,EAAEP,eAAe,CAACsB;AAX0C,CAAxC,GAYzB,EAZJ;AAaA,eAAenB,gBAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport cx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\r\n/**\r\n * A modal can contain a description with one or more paragraphs.\r\n */\r\n\r\nfunction ModalDescription(props) {\r\n  var children = props.children,\r\n      className = props.className,\r\n      content = props.content;\r\n  var classes = cx('description', className);\r\n  var rest = getUnhandledProps(ModalDescription, props);\r\n  var ElementType = getElementType(ModalDescription, props);\r\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\r\n    className: classes\r\n  }), childrenUtils.isNil(children) ? content : children);\r\n}\r\n\r\nModalDescription.handledProps = [\"as\", \"children\", \"className\", \"content\"];\r\nModalDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: PropTypes.elementType,\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** Shorthand for primary content. */\r\n  content: customPropTypes.contentShorthand\r\n} : {};\r\nexport default ModalDescription;"]},"metadata":{},"sourceType":"module"}