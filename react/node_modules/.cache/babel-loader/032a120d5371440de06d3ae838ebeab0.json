{"ast":null,"code":"/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n/**\r\n * Creates an array that is the composition of partially applied arguments,\r\n * placeholders, and provided arguments into a single array of arguments.\r\n *\r\n * @private\r\n * @param {Array} args The provided arguments.\r\n * @param {Array} partials The arguments to prepend to those provided.\r\n * @param {Array} holders The `partials` placeholder indexes.\r\n * @params {boolean} [isCurried] Specify composing for a curried function.\r\n * @returns {Array} Returns the new array of composed arguments.\r\n */\n\nfunction composeArgs(args, partials, holders, isCurried) {\n  var argsIndex = -1,\n      argsLength = args.length,\n      holdersLength = holders.length,\n      leftIndex = -1,\n      leftLength = partials.length,\n      rangeLength = nativeMax(argsLength - holdersLength, 0),\n      result = Array(leftLength + rangeLength),\n      isUncurried = !isCurried;\n\n  while (++leftIndex < leftLength) {\n    result[leftIndex] = partials[leftIndex];\n  }\n\n  while (++argsIndex < holdersLength) {\n    if (isUncurried || argsIndex < argsLength) {\n      result[holders[argsIndex]] = args[argsIndex];\n    }\n  }\n\n  while (rangeLength--) {\n    result[leftIndex++] = args[argsIndex++];\n  }\n\n  return result;\n}\n\nexport default composeArgs;","map":{"version":3,"sources":["C:/Users/xuebi/Desktop/EasyJobs/react/node_modules/lodash-es/_composeArgs.js"],"names":["nativeMax","Math","max","composeArgs","args","partials","holders","isCurried","argsIndex","argsLength","length","holdersLength","leftIndex","leftLength","rangeLength","result","Array","isUncurried"],"mappings":"AAAA;AACA,IAAIA,SAAS,GAAGC,IAAI,CAACC,GAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,QAA3B,EAAqCC,OAArC,EAA8CC,SAA9C,EAAyD;AACvD,MAAIC,SAAS,GAAG,CAAC,CAAjB;AAAA,MACIC,UAAU,GAAGL,IAAI,CAACM,MADtB;AAAA,MAEIC,aAAa,GAAGL,OAAO,CAACI,MAF5B;AAAA,MAGIE,SAAS,GAAG,CAAC,CAHjB;AAAA,MAIIC,UAAU,GAAGR,QAAQ,CAACK,MAJ1B;AAAA,MAKII,WAAW,GAAGd,SAAS,CAACS,UAAU,GAAGE,aAAd,EAA6B,CAA7B,CAL3B;AAAA,MAMII,MAAM,GAAGC,KAAK,CAACH,UAAU,GAAGC,WAAd,CANlB;AAAA,MAOIG,WAAW,GAAG,CAACV,SAPnB;;AASA,SAAO,EAAEK,SAAF,GAAcC,UAArB,EAAiC;AAC/BE,IAAAA,MAAM,CAACH,SAAD,CAAN,GAAoBP,QAAQ,CAACO,SAAD,CAA5B;AACD;;AACD,SAAO,EAAEJ,SAAF,GAAcG,aAArB,EAAoC;AAClC,QAAIM,WAAW,IAAIT,SAAS,GAAGC,UAA/B,EAA2C;AACzCM,MAAAA,MAAM,CAACT,OAAO,CAACE,SAAD,CAAR,CAAN,GAA6BJ,IAAI,CAACI,SAAD,CAAjC;AACD;AACF;;AACD,SAAOM,WAAW,EAAlB,EAAsB;AACpBC,IAAAA,MAAM,CAACH,SAAS,EAAV,CAAN,GAAsBR,IAAI,CAACI,SAAS,EAAV,CAA1B;AACD;;AACD,SAAOO,MAAP;AACD;;AAED,eAAeZ,WAAf","sourcesContent":["/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max;\r\n\r\n/**\r\n * Creates an array that is the composition of partially applied arguments,\r\n * placeholders, and provided arguments into a single array of arguments.\r\n *\r\n * @private\r\n * @param {Array} args The provided arguments.\r\n * @param {Array} partials The arguments to prepend to those provided.\r\n * @param {Array} holders The `partials` placeholder indexes.\r\n * @params {boolean} [isCurried] Specify composing for a curried function.\r\n * @returns {Array} Returns the new array of composed arguments.\r\n */\r\nfunction composeArgs(args, partials, holders, isCurried) {\r\n  var argsIndex = -1,\r\n      argsLength = args.length,\r\n      holdersLength = holders.length,\r\n      leftIndex = -1,\r\n      leftLength = partials.length,\r\n      rangeLength = nativeMax(argsLength - holdersLength, 0),\r\n      result = Array(leftLength + rangeLength),\r\n      isUncurried = !isCurried;\r\n\r\n  while (++leftIndex < leftLength) {\r\n    result[leftIndex] = partials[leftIndex];\r\n  }\r\n  while (++argsIndex < holdersLength) {\r\n    if (isUncurried || argsIndex < argsLength) {\r\n      result[holders[argsIndex]] = args[argsIndex];\r\n    }\r\n  }\r\n  while (rangeLength--) {\r\n    result[leftIndex++] = args[argsIndex++];\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default composeArgs;\r\n"]},"metadata":{},"sourceType":"module"}