{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport ItemContent from './ItemContent';\nimport ItemDescription from './ItemDescription';\nimport ItemExtra from './ItemExtra';\nimport ItemGroup from './ItemGroup';\nimport ItemHeader from './ItemHeader';\nimport ItemImage from './ItemImage';\nimport ItemMeta from './ItemMeta';\n/**\r\n * An item view presents large collections of site content for display.\r\n */\n\nfunction Item(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      image = props.image,\n      meta = props.meta;\n  var classes = cx('item', className);\n  var rest = getUnhandledProps(Item, props);\n  var ElementType = getElementType(Item, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), ItemImage.create(image, {\n    autoGenerateKey: false\n  }), /*#__PURE__*/React.createElement(ItemContent, {\n    content: content,\n    description: description,\n    extra: extra,\n    header: header,\n    meta: meta\n  }));\n}\n\nItem.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"image\", \"meta\"];\nItem.Content = ItemContent;\nItem.Description = ItemDescription;\nItem.Extra = ItemExtra;\nItem.Group = ItemGroup;\nItem.Header = ItemHeader;\nItem.Image = ItemImage;\nItem.Meta = ItemMeta;\nItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for ItemContent component. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for ItemDescription component. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemExtra component. */\n  extra: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemHeader component. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemImage component. */\n  image: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemMeta component. */\n  meta: customPropTypes.itemShorthand\n} : {};\nexport default Item;","map":{"version":3,"sources":["C:/Users/xuebi/Desktop/EasyJobs/react/node_modules/semantic-ui-react/dist/es/views/Item/Item.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","ItemContent","ItemDescription","ItemExtra","ItemGroup","ItemHeader","ItemImage","ItemMeta","Item","props","children","className","content","description","extra","header","image","meta","classes","rest","ElementType","isNil","createElement","create","autoGenerateKey","handledProps","Content","Description","Extra","Group","Header","Image","Meta","propTypes","process","env","NODE_ENV","as","elementType","node","string","contentShorthand","itemShorthand"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport cx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\r\nimport ItemContent from './ItemContent';\r\nimport ItemDescription from './ItemDescription';\r\nimport ItemExtra from './ItemExtra';\r\nimport ItemGroup from './ItemGroup';\r\nimport ItemHeader from './ItemHeader';\r\nimport ItemImage from './ItemImage';\r\nimport ItemMeta from './ItemMeta';\r\n/**\r\n * An item view presents large collections of site content for display.\r\n */\r\n\r\nfunction Item(props) {\r\n  var children = props.children,\r\n      className = props.className,\r\n      content = props.content,\r\n      description = props.description,\r\n      extra = props.extra,\r\n      header = props.header,\r\n      image = props.image,\r\n      meta = props.meta;\r\n  var classes = cx('item', className);\r\n  var rest = getUnhandledProps(Item, props);\r\n  var ElementType = getElementType(Item, props);\r\n\r\n  if (!childrenUtils.isNil(children)) {\r\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\r\n      className: classes\r\n    }), children);\r\n  }\r\n\r\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\r\n    className: classes\r\n  }), ItemImage.create(image, {\r\n    autoGenerateKey: false\r\n  }), /*#__PURE__*/React.createElement(ItemContent, {\r\n    content: content,\r\n    description: description,\r\n    extra: extra,\r\n    header: header,\r\n    meta: meta\r\n  }));\r\n}\r\n\r\nItem.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"image\", \"meta\"];\r\nItem.Content = ItemContent;\r\nItem.Description = ItemDescription;\r\nItem.Extra = ItemExtra;\r\nItem.Group = ItemGroup;\r\nItem.Header = ItemHeader;\r\nItem.Image = ItemImage;\r\nItem.Meta = ItemMeta;\r\nItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: PropTypes.elementType,\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** Shorthand for ItemContent component. */\r\n  content: customPropTypes.contentShorthand,\r\n\r\n  /** Shorthand for ItemDescription component. */\r\n  description: customPropTypes.itemShorthand,\r\n\r\n  /** Shorthand for ItemExtra component. */\r\n  extra: customPropTypes.itemShorthand,\r\n\r\n  /** Shorthand for ItemHeader component. */\r\n  header: customPropTypes.itemShorthand,\r\n\r\n  /** Shorthand for ItemImage component. */\r\n  image: customPropTypes.itemShorthand,\r\n\r\n  /** Shorthand for ItemMeta component. */\r\n  meta: customPropTypes.itemShorthand\r\n} : {};\r\nexport default Item;"]},"metadata":{},"sourceType":"module"}