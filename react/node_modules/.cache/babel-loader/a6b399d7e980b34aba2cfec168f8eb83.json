{"ast":null,"code":"var _jsxFileName = \"/Users/Kevin/Desktop/Platform/react/src/components/CommentList.js\";\nimport React from \"react\";\nimport Commented from \"./Comment\";\nimport { Button, Comment, Form, Header } from 'semantic-ui-react';\nexport default function CommentList(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"commentList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, props.comments.map((comment, index) => /*#__PURE__*/React.createElement(Commented, {\n    key: index,\n    comment: comment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/Kevin/Desktop/Platform/react/src/components/CommentList.js"],"names":["React","Commented","Button","Comment","Form","Header","CommentList","props","comments","map","comment","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,IAA1B,EAAgCC,MAAhC,QAA8C,mBAA9C;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AACtC,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUDA,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAmB,CAACC,OAAD,EAAUC,KAAV,kBAClB,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,KAAhB;AAAuB,IAAA,OAAO,EAAED,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAVC,CADJ;AAgBH","sourcesContent":["import React from \"react\";\nimport Commented from \"./Comment\";\nimport { Button, Comment, Form, Header } from 'semantic-ui-react'\n\nexport default function CommentList(props){\n    return(\n        <div className=\"commentList\">\n            {/* <h5 className=\"text-muted mb-4\">\n                <span className=\"badge badge-success\">{props.comments.length}</span>{\" \"}Comment{props.comments.length>0?\"s\":\"\"}\n            </h5>\n            {props.comments.length===0&& !props.loading?(<div className=\"alert text-center alert-info\">\n          Be the first to comment\n        </div>\n      ) : null} */}\n\n      \n      {props.comments.map((comment, index) => (\n        <Commented key={index} comment={comment} />\n      ))}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}