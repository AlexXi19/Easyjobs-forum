{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport RevealContent from './RevealContent';\n/**\r\n * A reveal displays additional content in place of previous content when activated.\r\n */\n\nfunction Reveal(props) {\n  var active = props.active,\n      animated = props.animated,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      disabled = props.disabled,\n      instant = props.instant;\n  var classes = cx('ui', animated, useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(instant, 'instant'), 'reveal', className);\n  var rest = getUnhandledProps(Reveal, props);\n  var ElementType = getElementType(Reveal, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nReveal.handledProps = [\"active\", \"animated\", \"as\", \"children\", \"className\", \"content\", \"disabled\", \"instant\"];\nReveal.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** An active reveal displays its hidden content. */\n  active: PropTypes.bool,\n\n  /** An animation name that will be applied to Reveal. */\n  animated: PropTypes.oneOf(['fade', 'small fade', 'move', 'move right', 'move up', 'move down', 'rotate', 'rotate left']),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A disabled reveal will not animate when hovered. */\n  disabled: PropTypes.bool,\n\n  /** An element can show its content without delay. */\n  instant: PropTypes.bool\n} : {};\nReveal.Content = RevealContent;\nexport default Reveal;","map":{"version":3,"sources":["C:/Users/xuebi/Desktop/EasyJobs/react/node_modules/semantic-ui-react/dist/es/elements/Reveal/Reveal.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","useKeyOnly","RevealContent","Reveal","props","active","animated","children","className","content","disabled","instant","classes","rest","ElementType","createElement","isNil","handledProps","propTypes","process","env","NODE_ENV","as","elementType","bool","oneOf","node","string","contentShorthand","Content"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,cAAzC,EAAyDC,iBAAzD,EAA4EC,UAA5E,QAA8F,WAA9F;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA;AACA;AACA;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,MAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AAAA,MACIC,QAAQ,GAAGF,KAAK,CAACE,QADrB;AAAA,MAEIC,QAAQ,GAAGH,KAAK,CAACG,QAFrB;AAAA,MAGIC,SAAS,GAAGJ,KAAK,CAACI,SAHtB;AAAA,MAIIC,OAAO,GAAGL,KAAK,CAACK,OAJpB;AAAA,MAKIC,QAAQ,GAAGN,KAAK,CAACM,QALrB;AAAA,MAMIC,OAAO,GAAGP,KAAK,CAACO,OANpB;AAOA,MAAIC,OAAO,GAAGlB,EAAE,CAAC,IAAD,EAAOY,QAAP,EAAiBL,UAAU,CAACI,MAAD,EAAS,QAAT,CAA3B,EAA+CJ,UAAU,CAACS,QAAD,EAAW,UAAX,CAAzD,EAAiFT,UAAU,CAACU,OAAD,EAAU,SAAV,CAA3F,EAAiH,QAAjH,EAA2HH,SAA3H,CAAhB;AACA,MAAIK,IAAI,GAAGb,iBAAiB,CAACG,MAAD,EAASC,KAAT,CAA5B;AACA,MAAIU,WAAW,GAAGf,cAAc,CAACI,MAAD,EAASC,KAAT,CAAhC;AACA,SAAO,aAAaR,KAAK,CAACmB,aAAN,CAAoBD,WAApB,EAAiCrB,QAAQ,CAAC,EAAD,EAAKoB,IAAL,EAAW;AACtEL,IAAAA,SAAS,EAAEI;AAD2D,GAAX,CAAzC,EAEhBf,aAAa,CAACmB,KAAd,CAAoBT,QAApB,IAAgCE,OAAhC,GAA0CF,QAF1B,CAApB;AAGD;;AAEDJ,MAAM,CAACc,YAAP,GAAsB,CAAC,QAAD,EAAW,UAAX,EAAuB,IAAvB,EAA6B,UAA7B,EAAyC,WAAzC,EAAsD,SAAtD,EAAiE,UAAjE,EAA6E,SAA7E,CAAtB;AACAd,MAAM,CAACe,SAAP,GAAmBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACzD;AACAC,EAAAA,EAAE,EAAE3B,SAAS,CAAC4B,WAF2C;;AAIzD;AACAlB,EAAAA,MAAM,EAAEV,SAAS,CAAC6B,IALuC;;AAOzD;AACAlB,EAAAA,QAAQ,EAAEX,SAAS,CAAC8B,KAAV,CAAgB,CAAC,MAAD,EAAS,YAAT,EAAuB,MAAvB,EAA+B,YAA/B,EAA6C,SAA7C,EAAwD,WAAxD,EAAqE,QAArE,EAA+E,aAA/E,CAAhB,CAR+C;;AAUzD;AACAlB,EAAAA,QAAQ,EAAEZ,SAAS,CAAC+B,IAXqC;;AAazD;AACAlB,EAAAA,SAAS,EAAEb,SAAS,CAACgC,MAdoC;;AAgBzD;AACAlB,EAAAA,OAAO,EAAEX,eAAe,CAAC8B,gBAjBgC;;AAmBzD;AACAlB,EAAAA,QAAQ,EAAEf,SAAS,CAAC6B,IApBqC;;AAsBzD;AACAb,EAAAA,OAAO,EAAEhB,SAAS,CAAC6B;AAvBsC,CAAxC,GAwBf,EAxBJ;AAyBArB,MAAM,CAAC0B,OAAP,GAAiB3B,aAAjB;AACA,eAAeC,MAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport cx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\r\nimport RevealContent from './RevealContent';\r\n/**\r\n * A reveal displays additional content in place of previous content when activated.\r\n */\r\n\r\nfunction Reveal(props) {\r\n  var active = props.active,\r\n      animated = props.animated,\r\n      children = props.children,\r\n      className = props.className,\r\n      content = props.content,\r\n      disabled = props.disabled,\r\n      instant = props.instant;\r\n  var classes = cx('ui', animated, useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(instant, 'instant'), 'reveal', className);\r\n  var rest = getUnhandledProps(Reveal, props);\r\n  var ElementType = getElementType(Reveal, props);\r\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\r\n    className: classes\r\n  }), childrenUtils.isNil(children) ? content : children);\r\n}\r\n\r\nReveal.handledProps = [\"active\", \"animated\", \"as\", \"children\", \"className\", \"content\", \"disabled\", \"instant\"];\r\nReveal.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: PropTypes.elementType,\r\n\r\n  /** An active reveal displays its hidden content. */\r\n  active: PropTypes.bool,\r\n\r\n  /** An animation name that will be applied to Reveal. */\r\n  animated: PropTypes.oneOf(['fade', 'small fade', 'move', 'move right', 'move up', 'move down', 'rotate', 'rotate left']),\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** Shorthand for primary content. */\r\n  content: customPropTypes.contentShorthand,\r\n\r\n  /** A disabled reveal will not animate when hovered. */\r\n  disabled: PropTypes.bool,\r\n\r\n  /** An element can show its content without delay. */\r\n  instant: PropTypes.bool\r\n} : {};\r\nReveal.Content = RevealContent;\r\nexport default Reveal;"]},"metadata":{},"sourceType":"module"}