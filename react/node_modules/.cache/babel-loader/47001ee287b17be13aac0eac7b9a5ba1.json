{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n/**\r\n * A dropdown menu can contain dividers to separate related content.\r\n */\n\nfunction DropdownDivider(props) {\n  var className = props.className;\n  var classes = cx('divider', className);\n  var rest = getUnhandledProps(DropdownDivider, props);\n  var ElementType = getElementType(DropdownDivider, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }));\n}\n\nDropdownDivider.handledProps = [\"as\", \"className\"];\nDropdownDivider.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string\n} : {};\nexport default DropdownDivider;","map":{"version":3,"sources":["C:/Users/xuebi/Desktop/EasyJobs/react/node_modules/semantic-ui-react/dist/es/modules/Dropdown/DropdownDivider.js"],"names":["_extends","cx","PropTypes","React","getElementType","getUnhandledProps","DropdownDivider","props","className","classes","rest","ElementType","createElement","handledProps","propTypes","process","env","NODE_ENV","as","elementType","string"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,WAAlD;AACA;AACA;AACA;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,MAAIC,SAAS,GAAGD,KAAK,CAACC,SAAtB;AACA,MAAIC,OAAO,GAAGR,EAAE,CAAC,SAAD,EAAYO,SAAZ,CAAhB;AACA,MAAIE,IAAI,GAAGL,iBAAiB,CAACC,eAAD,EAAkBC,KAAlB,CAA5B;AACA,MAAII,WAAW,GAAGP,cAAc,CAACE,eAAD,EAAkBC,KAAlB,CAAhC;AACA,SAAO,aAAaJ,KAAK,CAACS,aAAN,CAAoBD,WAApB,EAAiCX,QAAQ,CAAC,EAAD,EAAKU,IAAL,EAAW;AACtEF,IAAAA,SAAS,EAAEC;AAD2D,GAAX,CAAzC,CAApB;AAGD;;AAEDH,eAAe,CAACO,YAAhB,GAA+B,CAAC,IAAD,EAAO,WAAP,CAA/B;AACAP,eAAe,CAACQ,SAAhB,GAA4BC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAClE;AACAC,EAAAA,EAAE,EAAEhB,SAAS,CAACiB,WAFoD;;AAIlE;AACAX,EAAAA,SAAS,EAAEN,SAAS,CAACkB;AAL6C,CAAxC,GAMxB,EANJ;AAOA,eAAed,eAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport cx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { getElementType, getUnhandledProps } from '../../lib';\r\n/**\r\n * A dropdown menu can contain dividers to separate related content.\r\n */\r\n\r\nfunction DropdownDivider(props) {\r\n  var className = props.className;\r\n  var classes = cx('divider', className);\r\n  var rest = getUnhandledProps(DropdownDivider, props);\r\n  var ElementType = getElementType(DropdownDivider, props);\r\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\r\n    className: classes\r\n  }));\r\n}\r\n\r\nDropdownDivider.handledProps = [\"as\", \"className\"];\r\nDropdownDivider.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: PropTypes.elementType,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string\r\n} : {};\r\nexport default DropdownDivider;"]},"metadata":{},"sourceType":"module"}